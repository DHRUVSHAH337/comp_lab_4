Terminals unused in grammar

    symbol_exclamation
    symbol_hash
    keyword_struct
    keyword_typedef
    keyword_union


Rules useless in parser due to conflicts

  131 unary_operator: symbol_tilda


State 61 conflicts: 1 shift/reduce
State 80 conflicts: 12 reduce/reduce
State 280 conflicts: 1 shift/reduce
State 318 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

    6 declaration_list: declaration
    7                 | declaration_list declaration

    8 statement: labeled_statement
    9          | compound_statement
   10          | expression_statement
   11          | selection_statement
   12          | iteration_statement
   13          | jump_statement

   14 labeled_statement: identifier symbol_colon statement
   15                  | keyword_case constant_expression symbol_colon statement
   16                  | keyword_default symbol_colon statement

   17 compound_statement: symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket

   18 block_item_list: block_item
   19                | block_item_list block_item

   20 block_item: declaration
   21           | statement

   22 expression_statement: expression_opt symbol_semi_colon

   23 selection_statement: keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   25                    | keyword_switch symbol_open_bracket expression symbol_closed_bracket statement

   26 iteration_statement: keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement

   30 jump_statement: keyword_goto identifier symbol_semi_colon
   31               | keyword_continue symbol_semi_colon
   32               | keyword_break symbol_semi_colon
   33               | keyword_return expression_opt symbol_semi_colon

   34 declaration: declaration_specifiers init_declarator_list_opt symbol_semi_colon

   35 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   36                       | type_specifier declaration_specifiers_opt
   37                       | type_qualifier declaration_specifiers_opt
   38                       | function_specifier declaration_specifiers_opt

   39 init_declarator_list: init_declarator
   40                     | init_declarator_list symbol_comma init_declarator

   41 init_declarator: declarator
   42                | declarator symbol_equal initializer

   43 storage_class_specifier: keyword_extern
   44                        | keyword_static
   45                        | keyword_auto
   46                        | keyword_register

   47 type_specifier: keyword_void
   48               | keyword_char
   49               | keyword_short
   50               | keyword_int
   51               | keyword_long
   52               | keyword_float
   53               | keyword_double
   54               | keyword_signed
   55               | keyword_unsigned
   56               | keyword__Bool
   57               | keyword__Complex
   58               | keyword__Imaginary
   59               | enum_specifier

   60 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
   61                         | type_qualifier specifier_qualifier_list_opt

   62 enum_specifier: keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | keyword_enum identifier

   65 enumerator_list: enumerator
   66                | enumerator_list symbol_comma enumerator

   67 enumerator: enumeration_constant
   68           | enumeration_constant symbol_equal constant_expression

   69 type_qualifier: keyword_const
   70               | keyword_restrict
   71               | keyword_volatile

   72 function_specifier: keyword_inline

   73 declarator: pointer_opt direct_declarator

   74 direct_declarator: identifier
   75                  | symbol_open_bracket declarator symbol_closed_bracket
   76                  | direct_declarator symbol_open_square_bracket type_qualifier_list_opt assignment_expression_opt symbol_closed_square_bracket
   77                  | direct_declarator symbol_open_square_bracket keyword_static type_qualifier_list_opt assignment_expression symbol_closed_square_bracket
   78                  | direct_declarator symbol_open_square_bracket type_qualifier_list keyword_static assignment_expression symbol_closed_square_bracket
   79                  | direct_declarator symbol_open_square_bracket type_qualifier_list_opt symbol_star symbol_closed_square_bracket
   80                  | direct_declarator symbol_closed_bracket parameter_type_list symbol_closed_bracket
   81                  | direct_declarator symbol_open_bracket identifier_list_opt symbol_closed_bracket

   82 pointer: symbol_star type_qualifier_list_opt
   83        | symbol_star type_qualifier_list_opt pointer

   84 type_qualifier_list: type_qualifier
   85                    | type_qualifier_list type_qualifier

   86 parameter_type_list: parameter_list
   87                    | parameter_list symbol_comma symbol_threedot

   88 parameter_list: parameter_declaration
   89               | parameter_list symbol_comma parameter_declaration

   90 parameter_declaration: declaration_specifiers declarator
   91                      | declaration_specifiers

   92 identifier_list: identifier
   93                | identifier_list symbol_comma identifier

   94 type_name: specifier_qualifier_list

   95 initializer: assignment_expression
   96            | symbol_open_curly_bracket initializer_list symbol_open_curly_bracket
   97            | symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket

   98 initializer_list: designation_opt initializer
   99                 | initializer_list symbol_comma designation_opt initializer

  100 designation: designator_list symbol_equal

  101 designator_list: designator
  102                | designator_list designator

  103 designator: symbol_open_square_bracket constant_expression symbol_closed_square_bracket
  104           | symbol_dot identifier

  105 primary_expression: identifier
  106                   | constant
  107                   | string_constant
  108                   | symbol_open_bracket expression symbol_closed_bracket

  109 postfix_expression: primary_expression
  110                   | postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | postfix_expression symbol_dot identifier
  113                   | postfix_expression symbol_dash_greater identifier
  114                   | postfix_expression symbol_double_plus
  115                   | postfix_expression symbol_double_minus
  116                   | symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket

  118 argument_expression_list: assignment_expression
  119                         | argument_expression_list symbol_comma assignment_expression

  120 unary_expression: postfix_expression
  121                 | symbol_double_plus unary_expression
  122                 | symbol_double_minus unary_expression
  123                 | unary_operator cast_expression
  124                 | keyword_sizeof unary_expression
  125                 | keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket

  126 unary_operator: symbol_and
  127               | symbol_star
  128               | symbol_plus
  129               | symbol_minus
  130               | symbol_tilda
  131               | symbol_tilda

  132 cast_expression: unary_expression
  133                | symbol_open_bracket type_name symbol_closed_bracket cast_expression

  134 multiplicative_expression: cast_expression
  135                          | multiplicative_expression symbol_star cast_expression
  136                          | multiplicative_expression symbol_divide cast_expression
  137                          | multiplicative_expression symbol_modulo cast_expression

  138 additive_expression: multiplicative_expression
  139                    | additive_expression symbol_plus multiplicative_expression
  140                    | additive_expression symbol_minus multiplicative_expression

  141 shift_expression: additive_expression
  142                 | shift_expression symbol_leftshift additive_expression
  143                 | shift_expression symbol_rightshift additive_expression

  144 relational_expression: shift_expression
  145                      | relational_expression symbol_less shift_expression
  146                      | relational_expression symbol_greater shift_expression
  147                      | relational_expression symbol_lesseq shift_expression
  148                      | relational_expression symbol_greatereq shift_expression

  149 equality_expression: relational_expression
  150                    | equality_expression symbol_doubleeq relational_expression
  151                    | equality_expression symbol_noteq relational_expression

  152 AND_expression: equality_expression
  153               | AND_expression symbol_and equality_expression

  154 exclusive_OR_expression: AND_expression
  155                        | exclusive_OR_expression symbol_xor AND_expression

  156 inclusive_OR_expression: exclusive_OR_expression
  157                        | inclusive_OR_expression symbol_oneor exclusive_OR_expression

  158 logical_AND_expression: inclusive_OR_expression
  159                       | logical_AND_expression symbol_doubleand inclusive_OR_expression

  160 logical_OR_expression: logical_AND_expression
  161                      | logical_OR_expression symbol_doubleor logical_AND_expression

  162 conditional_expression: logical_OR_expression
  163                       | logical_OR_expression symbol_question expression symbol_colon conditional_expression

  164 assignment_expression: conditional_expression
  165                      | unary_expression assignment_operator assignment_expression

  166 assignment_operator: symbol_equal
  167                    | symbol_muleq
  168                    | symbol_diveq
  169                    | symbol_modeq
  170                    | symbol_pluseq
  171                    | symbol_minuseq
  172                    | symbol_leftshifteq
  173                    | symbol_rightshifteq
  174                    | symbol_andeq
  175                    | symbol_xoreq
  176                    | symbol_oreq

  177 expression: assignment_expression
  178           | expression symbol_comma assignment_expression

  179 constant_expression: conditional_expression

  180 declaration_list_opt: declaration_list
  181                     | %empty

  182 block_item_list_opt: block_item_list
  183                    | %empty

  184 expression_opt: expression
  185               | %empty

  186 init_declarator_list_opt: init_declarator_list
  187                         | %empty

  188 declaration_specifiers_opt: declaration_specifiers
  189                           | %empty

  190 specifier_qualifier_list_opt: specifier_qualifier_list
  191                             | %empty

  192 identifier_opt: identifier
  193               | %empty

  194 pointer_opt: pointer
  195            | %empty

  196 type_qualifier_list_opt: type_qualifier_list
  197                        | %empty

  198 assignment_expression_opt: assignment_expression
  199                          | %empty

  200 identifier_list_opt: identifier_list
  201                    | %empty

  202 designation_opt: designation
  203                | %empty

  204 argument_expression_list_opt: argument_expression_list
  205                             | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    identifier (258) 14 30 64 74 92 93 104 105 112 113 192
    constant (259) 106
    string_constant (260) 107
    symbol_colon (261) 14 15 16 163
    symbol_closed_curly_bracket (262) 17 62 63 97 116 117
    symbol_open_curly_bracket (263) 17 62 63 96 97 116 117
    symbol_semi_colon (264) 22 27 28 29 30 31 32 33 34
    symbol_closed_bracket (265) 23 24 25 26 27 28 29 75 80 81 108 111 116 117 125 133
    symbol_open_bracket (266) 23 24 25 26 27 28 29 75 81 108 111 116 117 125 133
    symbol_comma (267) 40 63 66 87 89 93 97 99 117 119 178
    symbol_equal (268) 42 68 100 166
    symbol_open_square_bracket (269) 76 77 78 79 103 110
    symbol_closed_square_bracket (270) 76 77 78 79 103 110
    symbol_star (271) 79 82 83 127 135
    symbol_threedot (272) 87
    symbol_dot (273) 104 112
    symbol_dash_greater (274) 113
    symbol_double_plus (275) 114 121
    symbol_double_minus (276) 115 122
    symbol_and (277) 126 153
    symbol_plus (278) 128 139
    symbol_minus (279) 129 140
    symbol_tilda (280) 130 131
    symbol_exclamation (281)
    symbol_divide (282) 136
    symbol_modulo (283) 137
    symbol_leftshift (284) 142
    symbol_rightshift (285) 143
    symbol_less (286) 145
    symbol_greater (287) 146
    symbol_greatereq (288) 148
    symbol_lesseq (289) 147
    symbol_doubleeq (290) 150
    symbol_noteq (291) 151
    symbol_xor (292) 155
    symbol_oneor (293) 157
    symbol_doubleor (294) 161
    symbol_question (295) 163
    symbol_doubleand (296) 159
    symbol_muleq (297) 167
    symbol_diveq (298) 168
    symbol_modeq (299) 169
    symbol_pluseq (300) 170
    symbol_minuseq (301) 171
    symbol_leftshifteq (302) 172
    symbol_rightshifteq (303) 173
    symbol_xoreq (304) 175
    symbol_andeq (305) 174
    symbol_oreq (306) 176
    symbol_hash (307)
    keyword_if (308) 23 24
    keyword_else (309) 24
    keyword_switch (310) 25
    keyword_while (311) 26 27
    keyword_do (312) 27
    keyword_for (313) 28 29
    keyword_goto (314) 30
    keyword_continue (315) 31
    keyword_break (316) 32
    keyword_return (317) 33
    keyword_extern (318) 43
    keyword_static (319) 44 77 78
    keyword_auto (320) 45
    keyword_register (321) 46
    keyword_void (322) 47
    keyword_char (323) 48
    keyword_short (324) 49
    keyword_int (325) 50
    keyword_long (326) 51
    keyword_float (327) 52
    keyword_double (328) 53
    keyword_signed (329) 54
    keyword_unsigned (330) 55
    keyword__Bool (331) 56
    keyword__Complex (332) 57
    keyword__Imaginary (333) 58
    keyword_enum (334) 62 63 64
    keyword_const (335) 69
    keyword_restrict (336) 70
    keyword_volatile (337) 71
    keyword_inline (338) 72
    keyword_sizeof (339) 124 125
    keyword_default (340) 16
    keyword_struct (341)
    keyword_typedef (342)
    keyword_union (343)
    keyword_case (344) 15
    enumeration_constant (345) 67 68


Nonterminals, with rules where they appear

    $accept (91)
        on left: 0
    translation_unit (92)
        on left: 1 2
        on right: 0 2
    external_declaration (93)
        on left: 3 4
        on right: 1 2
    function_definition (94)
        on left: 5
        on right: 3
    declaration_list (95)
        on left: 6 7
        on right: 7 180
    statement (96)
        on left: 8 9 10 11 12 13
        on right: 14 15 16 21 23 24 25 26 27 28 29
    labeled_statement (97)
        on left: 14 15 16
        on right: 8
    compound_statement (98)
        on left: 17
        on right: 5 9
    block_item_list (99)
        on left: 18 19
        on right: 19 182
    block_item (100)
        on left: 20 21
        on right: 18 19
    expression_statement (101)
        on left: 22
        on right: 10
    selection_statement (102)
        on left: 23 24 25
        on right: 11
    iteration_statement (103)
        on left: 26 27 28 29
        on right: 12
    jump_statement (104)
        on left: 30 31 32 33
        on right: 13
    declaration (105)
        on left: 34
        on right: 4 6 7 20 29
    declaration_specifiers (106)
        on left: 35 36 37 38
        on right: 5 34 90 91 188
    init_declarator_list (107)
        on left: 39 40
        on right: 40 186
    init_declarator (108)
        on left: 41 42
        on right: 39 40
    storage_class_specifier (109)
        on left: 43 44 45 46
        on right: 35
    type_specifier (110)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59
        on right: 36 60
    specifier_qualifier_list (111)
        on left: 60 61
        on right: 94 190
    enum_specifier (112)
        on left: 62 63 64
        on right: 59
    enumerator_list (113)
        on left: 65 66
        on right: 62 63 66
    enumerator (114)
        on left: 67 68
        on right: 65 66
    type_qualifier (115)
        on left: 69 70 71
        on right: 37 61 84 85
    function_specifier (116)
        on left: 72
        on right: 38
    declarator (117)
        on left: 73
        on right: 5 41 42 75 90
    direct_declarator (118)
        on left: 74 75 76 77 78 79 80 81
        on right: 73 76 77 78 79 80 81
    pointer (119)
        on left: 82 83
        on right: 83 194
    type_qualifier_list (120)
        on left: 84 85
        on right: 78 85 196
    parameter_type_list (121)
        on left: 86 87
        on right: 80
    parameter_list (122)
        on left: 88 89
        on right: 86 87 89
    parameter_declaration (123)
        on left: 90 91
        on right: 88 89
    identifier_list (124)
        on left: 92 93
        on right: 93 200
    type_name (125)
        on left: 94
        on right: 116 117 125 133
    initializer (126)
        on left: 95 96 97
        on right: 42 98 99
    initializer_list (127)
        on left: 98 99
        on right: 96 97 99 116 117
    designation (128)
        on left: 100
        on right: 202
    designator_list (129)
        on left: 101 102
        on right: 100 102
    designator (130)
        on left: 103 104
        on right: 101 102
    primary_expression (131)
        on left: 105 106 107 108
        on right: 109
    postfix_expression (132)
        on left: 109 110 111 112 113 114 115 116 117
        on right: 110 111 112 113 114 115 120
    argument_expression_list (133)
        on left: 118 119
        on right: 119 204
    unary_expression (134)
        on left: 120 121 122 123 124 125
        on right: 121 122 124 132 165
    unary_operator (135)
        on left: 126 127 128 129 130 131
        on right: 123
    cast_expression (136)
        on left: 132 133
        on right: 123 133 134 135 136 137
    multiplicative_expression (137)
        on left: 134 135 136 137
        on right: 135 136 137 138 139 140
    additive_expression (138)
        on left: 138 139 140
        on right: 139 140 141 142 143
    shift_expression (139)
        on left: 141 142 143
        on right: 142 143 144 145 146 147 148
    relational_expression (140)
        on left: 144 145 146 147 148
        on right: 145 146 147 148 149 150 151
    equality_expression (141)
        on left: 149 150 151
        on right: 150 151 152 153
    AND_expression (142)
        on left: 152 153
        on right: 153 154 155
    exclusive_OR_expression (143)
        on left: 154 155
        on right: 155 156 157
    inclusive_OR_expression (144)
        on left: 156 157
        on right: 157 158 159
    logical_AND_expression (145)
        on left: 158 159
        on right: 159 160 161
    logical_OR_expression (146)
        on left: 160 161
        on right: 161 162 163
    conditional_expression (147)
        on left: 162 163
        on right: 163 164 179
    assignment_expression (148)
        on left: 164 165
        on right: 77 78 95 118 119 165 177 178 198
    assignment_operator (149)
        on left: 166 167 168 169 170 171 172 173 174 175 176
        on right: 165
    expression (150)
        on left: 177 178
        on right: 23 24 25 26 27 108 110 163 178 184
    constant_expression (151)
        on left: 179
        on right: 15 68 103
    declaration_list_opt (152)
        on left: 180 181
        on right: 5
    block_item_list_opt (153)
        on left: 182 183
        on right: 17
    expression_opt (154)
        on left: 184 185
        on right: 22 28 29 33
    init_declarator_list_opt (155)
        on left: 186 187
        on right: 34
    declaration_specifiers_opt (156)
        on left: 188 189
        on right: 35 36 37 38
    specifier_qualifier_list_opt (157)
        on left: 190 191
        on right: 60 61
    identifier_opt (158)
        on left: 192 193
        on right: 62 63
    pointer_opt (159)
        on left: 194 195
        on right: 73
    type_qualifier_list_opt (160)
        on left: 196 197
        on right: 76 77 79 82 83
    assignment_expression_opt (161)
        on left: 198 199
        on right: 76
    identifier_list_opt (162)
        on left: 200 201
        on right: 81
    designation_opt (163)
        on left: 202 203
        on right: 98 99
    argument_expression_list_opt (164)
        on left: 204 205
        on right: 111


State 0

    0 $accept: . translation_unit $end
    1 translation_unit: . external_declaration
    2                 | . translation_unit external_declaration
    3 external_declaration: . function_definition
    4                     | . declaration
    5 function_definition: . declaration_specifiers declarator declaration_list_opt compound_statement
   34 declaration: . declaration_specifiers init_declarator_list_opt symbol_semi_colon
   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline

    keyword_extern      shift, and go to state 1
    keyword_static      shift, and go to state 2
    keyword_auto        shift, and go to state 3
    keyword_register    shift, and go to state 4
    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20
    keyword_inline      shift, and go to state 21

    translation_unit         go to state 22
    external_declaration     go to state 23
    function_definition      go to state 24
    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 1

   43 storage_class_specifier: keyword_extern .

    $default  reduce using rule 43 (storage_class_specifier)


State 2

   44 storage_class_specifier: keyword_static .

    $default  reduce using rule 44 (storage_class_specifier)


State 3

   45 storage_class_specifier: keyword_auto .

    $default  reduce using rule 45 (storage_class_specifier)


State 4

   46 storage_class_specifier: keyword_register .

    $default  reduce using rule 46 (storage_class_specifier)


State 5

   47 type_specifier: keyword_void .

    $default  reduce using rule 47 (type_specifier)


State 6

   48 type_specifier: keyword_char .

    $default  reduce using rule 48 (type_specifier)


State 7

   49 type_specifier: keyword_short .

    $default  reduce using rule 49 (type_specifier)


State 8

   50 type_specifier: keyword_int .

    $default  reduce using rule 50 (type_specifier)


State 9

   51 type_specifier: keyword_long .

    $default  reduce using rule 51 (type_specifier)


State 10

   52 type_specifier: keyword_float .

    $default  reduce using rule 52 (type_specifier)


State 11

   53 type_specifier: keyword_double .

    $default  reduce using rule 53 (type_specifier)


State 12

   54 type_specifier: keyword_signed .

    $default  reduce using rule 54 (type_specifier)


State 13

   55 type_specifier: keyword_unsigned .

    $default  reduce using rule 55 (type_specifier)


State 14

   56 type_specifier: keyword__Bool .

    $default  reduce using rule 56 (type_specifier)


State 15

   57 type_specifier: keyword__Complex .

    $default  reduce using rule 57 (type_specifier)


State 16

   58 type_specifier: keyword__Imaginary .

    $default  reduce using rule 58 (type_specifier)


State 17

   62 enum_specifier: keyword_enum . identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | keyword_enum . identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | keyword_enum . identifier
  192 identifier_opt: . identifier
  193               | . %empty  [symbol_open_curly_bracket]

    identifier  shift, and go to state 32

    $default  reduce using rule 193 (identifier_opt)

    identifier_opt  go to state 33


State 18

   69 type_qualifier: keyword_const .

    $default  reduce using rule 69 (type_qualifier)


State 19

   70 type_qualifier: keyword_restrict .

    $default  reduce using rule 70 (type_qualifier)


State 20

   71 type_qualifier: keyword_volatile .

    $default  reduce using rule 71 (type_qualifier)


State 21

   72 function_specifier: keyword_inline .

    $default  reduce using rule 72 (function_specifier)


State 22

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration
    3 external_declaration: . function_definition
    4                     | . declaration
    5 function_definition: . declaration_specifiers declarator declaration_list_opt compound_statement
   34 declaration: . declaration_specifiers init_declarator_list_opt symbol_semi_colon
   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline

    $end                shift, and go to state 34
    keyword_extern      shift, and go to state 1
    keyword_static      shift, and go to state 2
    keyword_auto        shift, and go to state 3
    keyword_register    shift, and go to state 4
    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20
    keyword_inline      shift, and go to state 21

    external_declaration     go to state 35
    function_definition      go to state 24
    declaration              go to state 25
    declaration_specifiers   go to state 26
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 23

    1 translation_unit: external_declaration .

    $default  reduce using rule 1 (translation_unit)


State 24

    3 external_declaration: function_definition .

    $default  reduce using rule 3 (external_declaration)


State 25

    4 external_declaration: declaration .

    $default  reduce using rule 4 (external_declaration)


State 26

    5 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement
   34 declaration: declaration_specifiers . init_declarator_list_opt symbol_semi_colon
   39 init_declarator_list: . init_declarator
   40                     | . init_declarator_list symbol_comma init_declarator
   41 init_declarator: . declarator
   42                | . declarator symbol_equal initializer
   73 declarator: . pointer_opt direct_declarator
   82 pointer: . symbol_star type_qualifier_list_opt
   83        | . symbol_star type_qualifier_list_opt pointer
  186 init_declarator_list_opt: . init_declarator_list
  187                         | . %empty  [symbol_semi_colon]
  194 pointer_opt: . pointer
  195            | . %empty  [identifier, symbol_open_bracket]

    symbol_star  shift, and go to state 36

    symbol_semi_colon  reduce using rule 187 (init_declarator_list_opt)
    $default           reduce using rule 195 (pointer_opt)

    init_declarator_list      go to state 37
    init_declarator           go to state 38
    declarator                go to state 39
    pointer                   go to state 40
    init_declarator_list_opt  go to state 41
    pointer_opt               go to state 42


State 27

   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   35                       | storage_class_specifier . declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline
  188 declaration_specifiers_opt: . declaration_specifiers
  189                           | . %empty  [identifier, symbol_semi_colon, symbol_closed_bracket, symbol_open_bracket, symbol_comma, symbol_star]

    keyword_extern      shift, and go to state 1
    keyword_static      shift, and go to state 2
    keyword_auto        shift, and go to state 3
    keyword_register    shift, and go to state 4
    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20
    keyword_inline      shift, and go to state 21

    $default  reduce using rule 189 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31
    declaration_specifiers_opt  go to state 44


State 28

   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   36                       | type_specifier . declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline
  188 declaration_specifiers_opt: . declaration_specifiers
  189                           | . %empty  [identifier, symbol_semi_colon, symbol_closed_bracket, symbol_open_bracket, symbol_comma, symbol_star]

    keyword_extern      shift, and go to state 1
    keyword_static      shift, and go to state 2
    keyword_auto        shift, and go to state 3
    keyword_register    shift, and go to state 4
    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20
    keyword_inline      shift, and go to state 21

    $default  reduce using rule 189 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31
    declaration_specifiers_opt  go to state 45


State 29

   59 type_specifier: enum_specifier .

    $default  reduce using rule 59 (type_specifier)


State 30

   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   37                       | type_qualifier . declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline
  188 declaration_specifiers_opt: . declaration_specifiers
  189                           | . %empty  [identifier, symbol_semi_colon, symbol_closed_bracket, symbol_open_bracket, symbol_comma, symbol_star]

    keyword_extern      shift, and go to state 1
    keyword_static      shift, and go to state 2
    keyword_auto        shift, and go to state 3
    keyword_register    shift, and go to state 4
    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20
    keyword_inline      shift, and go to state 21

    $default  reduce using rule 189 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31
    declaration_specifiers_opt  go to state 46


State 31

   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   38                       | function_specifier . declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline
  188 declaration_specifiers_opt: . declaration_specifiers
  189                           | . %empty  [identifier, symbol_semi_colon, symbol_closed_bracket, symbol_open_bracket, symbol_comma, symbol_star]

    keyword_extern      shift, and go to state 1
    keyword_static      shift, and go to state 2
    keyword_auto        shift, and go to state 3
    keyword_register    shift, and go to state 4
    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20
    keyword_inline      shift, and go to state 21

    $default  reduce using rule 189 (declaration_specifiers_opt)

    declaration_specifiers      go to state 43
    storage_class_specifier     go to state 27
    type_specifier              go to state 28
    enum_specifier              go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31
    declaration_specifiers_opt  go to state 47


State 32

   64 enum_specifier: keyword_enum identifier .  [identifier, symbol_semi_colon, symbol_closed_bracket, symbol_open_bracket, symbol_comma, symbol_star, keyword_extern, keyword_static, keyword_auto, keyword_register, keyword_void, keyword_char, keyword_short, keyword_int, keyword_long, keyword_float, keyword_double, keyword_signed, keyword_unsigned, keyword__Bool, keyword__Complex, keyword__Imaginary, keyword_enum, keyword_const, keyword_restrict, keyword_volatile, keyword_inline]
  192 identifier_opt: identifier .  [symbol_open_curly_bracket]

    symbol_open_curly_bracket  reduce using rule 192 (identifier_opt)
    $default                   reduce using rule 64 (enum_specifier)


State 33

   62 enum_specifier: keyword_enum identifier_opt . symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | keyword_enum identifier_opt . symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket

    symbol_open_curly_bracket  shift, and go to state 48


State 34

    0 $accept: translation_unit $end .

    $default  accept


State 35

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


State 36

   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   82 pointer: symbol_star . type_qualifier_list_opt
   83        | symbol_star . type_qualifier_list_opt pointer
   84 type_qualifier_list: . type_qualifier
   85                    | . type_qualifier_list type_qualifier
  196 type_qualifier_list_opt: . type_qualifier_list
  197                        | . %empty  [identifier, symbol_open_bracket, symbol_star]

    keyword_const     shift, and go to state 18
    keyword_restrict  shift, and go to state 19
    keyword_volatile  shift, and go to state 20

    $default  reduce using rule 197 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list      go to state 50
    type_qualifier_list_opt  go to state 51


State 37

   40 init_declarator_list: init_declarator_list . symbol_comma init_declarator
  186 init_declarator_list_opt: init_declarator_list .  [symbol_semi_colon]

    symbol_comma  shift, and go to state 52

    $default  reduce using rule 186 (init_declarator_list_opt)


State 38

   39 init_declarator_list: init_declarator .

    $default  reduce using rule 39 (init_declarator_list)


State 39

    5 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement
    6 declaration_list: . declaration
    7                 | . declaration_list declaration
   34 declaration: . declaration_specifiers init_declarator_list_opt symbol_semi_colon
   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   41 init_declarator: declarator .  [symbol_semi_colon, symbol_comma]
   42                | declarator . symbol_equal initializer
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline
  180 declaration_list_opt: . declaration_list
  181                     | . %empty  [symbol_open_curly_bracket]

    symbol_equal        shift, and go to state 53
    keyword_extern      shift, and go to state 1
    keyword_static      shift, and go to state 2
    keyword_auto        shift, and go to state 3
    keyword_register    shift, and go to state 4
    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20
    keyword_inline      shift, and go to state 21

    symbol_open_curly_bracket  reduce using rule 181 (declaration_list_opt)
    $default                   reduce using rule 41 (init_declarator)

    declaration_list         go to state 54
    declaration              go to state 55
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    declaration_list_opt     go to state 57


State 40

  194 pointer_opt: pointer .

    $default  reduce using rule 194 (pointer_opt)


State 41

   34 declaration: declaration_specifiers init_declarator_list_opt . symbol_semi_colon

    symbol_semi_colon  shift, and go to state 58


State 42

   73 declarator: pointer_opt . direct_declarator
   74 direct_declarator: . identifier
   75                  | . symbol_open_bracket declarator symbol_closed_bracket
   76                  | . direct_declarator symbol_open_square_bracket type_qualifier_list_opt assignment_expression_opt symbol_closed_square_bracket
   77                  | . direct_declarator symbol_open_square_bracket keyword_static type_qualifier_list_opt assignment_expression symbol_closed_square_bracket
   78                  | . direct_declarator symbol_open_square_bracket type_qualifier_list keyword_static assignment_expression symbol_closed_square_bracket
   79                  | . direct_declarator symbol_open_square_bracket type_qualifier_list_opt symbol_star symbol_closed_square_bracket
   80                  | . direct_declarator symbol_closed_bracket parameter_type_list symbol_closed_bracket
   81                  | . direct_declarator symbol_open_bracket identifier_list_opt symbol_closed_bracket

    identifier           shift, and go to state 59
    symbol_open_bracket  shift, and go to state 60

    direct_declarator  go to state 61


State 43

  188 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 188 (declaration_specifiers_opt)


State 44

   35 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 35 (declaration_specifiers)


State 45

   36 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 36 (declaration_specifiers)


State 46

   37 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 37 (declaration_specifiers)


State 47

   38 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 38 (declaration_specifiers)


State 48

   62 enum_specifier: keyword_enum identifier_opt symbol_open_curly_bracket . enumerator_list symbol_closed_curly_bracket
   63               | keyword_enum identifier_opt symbol_open_curly_bracket . enumerator_list symbol_comma symbol_closed_curly_bracket
   65 enumerator_list: . enumerator
   66                | . enumerator_list symbol_comma enumerator
   67 enumerator: . enumeration_constant
   68           | . enumeration_constant symbol_equal constant_expression

    enumeration_constant  shift, and go to state 62

    enumerator_list  go to state 63
    enumerator       go to state 64


State 49

   84 type_qualifier_list: type_qualifier .

    $default  reduce using rule 84 (type_qualifier_list)


State 50

   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   85 type_qualifier_list: type_qualifier_list . type_qualifier
  196 type_qualifier_list_opt: type_qualifier_list .  [identifier, constant, string_constant, symbol_open_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_sizeof]

    keyword_const     shift, and go to state 18
    keyword_restrict  shift, and go to state 19
    keyword_volatile  shift, and go to state 20

    $default  reduce using rule 196 (type_qualifier_list_opt)

    type_qualifier  go to state 65


State 51

   82 pointer: . symbol_star type_qualifier_list_opt
   82        | symbol_star type_qualifier_list_opt .  [identifier, symbol_open_bracket]
   83        | . symbol_star type_qualifier_list_opt pointer
   83        | symbol_star type_qualifier_list_opt . pointer

    symbol_star  shift, and go to state 36

    $default  reduce using rule 82 (pointer)

    pointer  go to state 66


State 52

   40 init_declarator_list: init_declarator_list symbol_comma . init_declarator
   41 init_declarator: . declarator
   42                | . declarator symbol_equal initializer
   73 declarator: . pointer_opt direct_declarator
   82 pointer: . symbol_star type_qualifier_list_opt
   83        | . symbol_star type_qualifier_list_opt pointer
  194 pointer_opt: . pointer
  195            | . %empty  [identifier, symbol_open_bracket]

    symbol_star  shift, and go to state 36

    $default  reduce using rule 195 (pointer_opt)

    init_declarator  go to state 67
    declarator       go to state 68
    pointer          go to state 40
    pointer_opt      go to state 42


State 53

   42 init_declarator: declarator symbol_equal . initializer
   95 initializer: . assignment_expression
   96            | . symbol_open_curly_bracket initializer_list symbol_open_curly_bracket
   97            | . symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression

    identifier                 shift, and go to state 69
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 72
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_sizeof             shift, and go to state 81

    initializer                go to state 82
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 99


State 54

    7 declaration_list: declaration_list . declaration
   34 declaration: . declaration_specifiers init_declarator_list_opt symbol_semi_colon
   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline
  180 declaration_list_opt: declaration_list .  [symbol_open_curly_bracket]

    keyword_extern      shift, and go to state 1
    keyword_static      shift, and go to state 2
    keyword_auto        shift, and go to state 3
    keyword_register    shift, and go to state 4
    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20
    keyword_inline      shift, and go to state 21

    $default  reduce using rule 180 (declaration_list_opt)

    declaration              go to state 100
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31


State 55

    6 declaration_list: declaration .

    $default  reduce using rule 6 (declaration_list)


State 56

   34 declaration: declaration_specifiers . init_declarator_list_opt symbol_semi_colon
   39 init_declarator_list: . init_declarator
   40                     | . init_declarator_list symbol_comma init_declarator
   41 init_declarator: . declarator
   42                | . declarator symbol_equal initializer
   73 declarator: . pointer_opt direct_declarator
   82 pointer: . symbol_star type_qualifier_list_opt
   83        | . symbol_star type_qualifier_list_opt pointer
  186 init_declarator_list_opt: . init_declarator_list
  187                         | . %empty  [symbol_semi_colon]
  194 pointer_opt: . pointer
  195            | . %empty  [identifier, symbol_open_bracket]

    symbol_star  shift, and go to state 36

    symbol_semi_colon  reduce using rule 187 (init_declarator_list_opt)
    $default           reduce using rule 195 (pointer_opt)

    init_declarator_list      go to state 37
    init_declarator           go to state 38
    declarator                go to state 68
    pointer                   go to state 40
    init_declarator_list_opt  go to state 41
    pointer_opt               go to state 42


State 57

    5 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket

    symbol_open_curly_bracket  shift, and go to state 101

    compound_statement  go to state 102


State 58

   34 declaration: declaration_specifiers init_declarator_list_opt symbol_semi_colon .

    $default  reduce using rule 34 (declaration)


State 59

   74 direct_declarator: identifier .

    $default  reduce using rule 74 (direct_declarator)


State 60

   73 declarator: . pointer_opt direct_declarator
   75 direct_declarator: symbol_open_bracket . declarator symbol_closed_bracket
   82 pointer: . symbol_star type_qualifier_list_opt
   83        | . symbol_star type_qualifier_list_opt pointer
  194 pointer_opt: . pointer
  195            | . %empty  [identifier, symbol_open_bracket]

    symbol_star  shift, and go to state 36

    $default  reduce using rule 195 (pointer_opt)

    declarator   go to state 103
    pointer      go to state 40
    pointer_opt  go to state 42


State 61

   73 declarator: pointer_opt direct_declarator .  [symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_equal, keyword_extern, keyword_static, keyword_auto, keyword_register, keyword_void, keyword_char, keyword_short, keyword_int, keyword_long, keyword_float, keyword_double, keyword_signed, keyword_unsigned, keyword__Bool, keyword__Complex, keyword__Imaginary, keyword_enum, keyword_const, keyword_restrict, keyword_volatile, keyword_inline]
   76 direct_declarator: direct_declarator . symbol_open_square_bracket type_qualifier_list_opt assignment_expression_opt symbol_closed_square_bracket
   77                  | direct_declarator . symbol_open_square_bracket keyword_static type_qualifier_list_opt assignment_expression symbol_closed_square_bracket
   78                  | direct_declarator . symbol_open_square_bracket type_qualifier_list keyword_static assignment_expression symbol_closed_square_bracket
   79                  | direct_declarator . symbol_open_square_bracket type_qualifier_list_opt symbol_star symbol_closed_square_bracket
   80                  | direct_declarator . symbol_closed_bracket parameter_type_list symbol_closed_bracket
   81                  | direct_declarator . symbol_open_bracket identifier_list_opt symbol_closed_bracket

    symbol_closed_bracket       shift, and go to state 104
    symbol_open_bracket         shift, and go to state 105
    symbol_open_square_bracket  shift, and go to state 106

    symbol_closed_bracket  [reduce using rule 73 (declarator)]
    $default               reduce using rule 73 (declarator)


State 62

   67 enumerator: enumeration_constant .  [symbol_closed_curly_bracket, symbol_comma]
   68           | enumeration_constant . symbol_equal constant_expression

    symbol_equal  shift, and go to state 107

    $default  reduce using rule 67 (enumerator)


State 63

   62 enum_specifier: keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list . symbol_closed_curly_bracket
   63               | keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list . symbol_comma symbol_closed_curly_bracket
   66 enumerator_list: enumerator_list . symbol_comma enumerator

    symbol_closed_curly_bracket  shift, and go to state 108
    symbol_comma                 shift, and go to state 109


State 64

   65 enumerator_list: enumerator .

    $default  reduce using rule 65 (enumerator_list)


State 65

   85 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 85 (type_qualifier_list)


State 66

   83 pointer: symbol_star type_qualifier_list_opt pointer .

    $default  reduce using rule 83 (pointer)


State 67

   40 init_declarator_list: init_declarator_list symbol_comma init_declarator .

    $default  reduce using rule 40 (init_declarator_list)


State 68

   41 init_declarator: declarator .  [symbol_semi_colon, symbol_comma]
   42                | declarator . symbol_equal initializer

    symbol_equal  shift, and go to state 53

    $default  reduce using rule 41 (init_declarator)


State 69

  105 primary_expression: identifier .

    $default  reduce using rule 105 (primary_expression)


State 70

  106 primary_expression: constant .

    $default  reduce using rule 106 (primary_expression)


State 71

  107 primary_expression: string_constant .

    $default  reduce using rule 107 (primary_expression)


State 72

   96 initializer: symbol_open_curly_bracket . initializer_list symbol_open_curly_bracket
   97            | symbol_open_curly_bracket . initializer_list symbol_comma symbol_closed_curly_bracket
   98 initializer_list: . designation_opt initializer
   99                 | . initializer_list symbol_comma designation_opt initializer
  100 designation: . designator_list symbol_equal
  101 designator_list: . designator
  102                | . designator_list designator
  103 designator: . symbol_open_square_bracket constant_expression symbol_closed_square_bracket
  104           | . symbol_dot identifier
  202 designation_opt: . designation
  203                | . %empty  [identifier, constant, string_constant, symbol_open_curly_bracket, symbol_open_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_sizeof]

    symbol_open_square_bracket  shift, and go to state 110
    symbol_dot                  shift, and go to state 111

    $default  reduce using rule 203 (designation_opt)

    initializer_list  go to state 112
    designation       go to state 113
    designator_list   go to state 114
    designator        go to state 115
    designation_opt   go to state 116


State 73

   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   60 specifier_qualifier_list: . type_specifier specifier_qualifier_list_opt
   61                         | . type_qualifier specifier_qualifier_list_opt
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   94 type_name: . specifier_qualifier_list
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  108                   | symbol_open_bracket . expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  116                   | symbol_open_bracket . type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  117                   | symbol_open_bracket . type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  133                | symbol_open_bracket . type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_void         shift, and go to state 5
    keyword_char         shift, and go to state 6
    keyword_short        shift, and go to state 7
    keyword_int          shift, and go to state 8
    keyword_long         shift, and go to state 9
    keyword_float        shift, and go to state 10
    keyword_double       shift, and go to state 11
    keyword_signed       shift, and go to state 12
    keyword_unsigned     shift, and go to state 13
    keyword__Bool        shift, and go to state 14
    keyword__Complex     shift, and go to state 15
    keyword__Imaginary   shift, and go to state 16
    keyword_enum         shift, and go to state 17
    keyword_const        shift, and go to state 18
    keyword_restrict     shift, and go to state 19
    keyword_volatile     shift, and go to state 20
    keyword_sizeof       shift, and go to state 81

    type_specifier             go to state 117
    specifier_qualifier_list   go to state 118
    enum_specifier             go to state 29
    type_qualifier             go to state 119
    type_name                  go to state 120
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 122


State 74

  127 unary_operator: symbol_star .

    $default  reduce using rule 127 (unary_operator)


State 75

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  121                 | symbol_double_plus . unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 123
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 124
    unary_operator      go to state 86


State 76

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  122                 | symbol_double_minus . unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 123
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 125
    unary_operator      go to state 86


State 77

  126 unary_operator: symbol_and .

    $default  reduce using rule 126 (unary_operator)


State 78

  128 unary_operator: symbol_plus .

    $default  reduce using rule 128 (unary_operator)


State 79

  129 unary_operator: symbol_minus .

    $default  reduce using rule 129 (unary_operator)


State 80

  130 unary_operator: symbol_tilda .  [identifier, constant, string_constant, symbol_open_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_sizeof]
  131               | symbol_tilda .  [identifier, constant, string_constant, symbol_open_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_sizeof]

    identifier           reduce using rule 130 (unary_operator)
    identifier           [reduce using rule 131 (unary_operator)]
    constant             reduce using rule 130 (unary_operator)
    constant             [reduce using rule 131 (unary_operator)]
    string_constant      reduce using rule 130 (unary_operator)
    string_constant      [reduce using rule 131 (unary_operator)]
    symbol_open_bracket  reduce using rule 130 (unary_operator)
    symbol_open_bracket  [reduce using rule 131 (unary_operator)]
    symbol_star          reduce using rule 130 (unary_operator)
    symbol_star          [reduce using rule 131 (unary_operator)]
    symbol_double_plus   reduce using rule 130 (unary_operator)
    symbol_double_plus   [reduce using rule 131 (unary_operator)]
    symbol_double_minus  reduce using rule 130 (unary_operator)
    symbol_double_minus  [reduce using rule 131 (unary_operator)]
    symbol_and           reduce using rule 130 (unary_operator)
    symbol_and           [reduce using rule 131 (unary_operator)]
    symbol_plus          reduce using rule 130 (unary_operator)
    symbol_plus          [reduce using rule 131 (unary_operator)]
    symbol_minus         reduce using rule 130 (unary_operator)
    symbol_minus         [reduce using rule 131 (unary_operator)]
    symbol_tilda         reduce using rule 130 (unary_operator)
    symbol_tilda         [reduce using rule 131 (unary_operator)]
    keyword_sizeof       reduce using rule 130 (unary_operator)
    keyword_sizeof       [reduce using rule 131 (unary_operator)]
    $default             reduce using rule 130 (unary_operator)


State 81

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  124                 | keyword_sizeof . unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  125                 | keyword_sizeof . symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 126
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 127
    unary_operator      go to state 86


State 82

   42 init_declarator: declarator symbol_equal initializer .

    $default  reduce using rule 42 (init_declarator)


State 83

  109 postfix_expression: primary_expression .

    $default  reduce using rule 109 (postfix_expression)


State 84

  110 postfix_expression: postfix_expression . symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | postfix_expression . symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | postfix_expression . symbol_dot identifier
  113                   | postfix_expression . symbol_dash_greater identifier
  114                   | postfix_expression . symbol_double_plus
  115                   | postfix_expression . symbol_double_minus
  120 unary_expression: postfix_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_equal, symbol_closed_square_bracket, symbol_star, symbol_and, symbol_plus, symbol_minus, symbol_divide, symbol_modulo, symbol_leftshift, symbol_rightshift, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand, symbol_muleq, symbol_diveq, symbol_modeq, symbol_pluseq, symbol_minuseq, symbol_leftshifteq, symbol_rightshifteq, symbol_xoreq, symbol_andeq, symbol_oreq]

    symbol_open_bracket         shift, and go to state 128
    symbol_open_square_bracket  shift, and go to state 129
    symbol_dot                  shift, and go to state 130
    symbol_dash_greater         shift, and go to state 131
    symbol_double_plus          shift, and go to state 132
    symbol_double_minus         shift, and go to state 133

    $default  reduce using rule 120 (unary_expression)


State 85

  132 cast_expression: unary_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_star, symbol_and, symbol_plus, symbol_minus, symbol_divide, symbol_modulo, symbol_leftshift, symbol_rightshift, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]
  165 assignment_expression: unary_expression . assignment_operator assignment_expression
  166 assignment_operator: . symbol_equal
  167                    | . symbol_muleq
  168                    | . symbol_diveq
  169                    | . symbol_modeq
  170                    | . symbol_pluseq
  171                    | . symbol_minuseq
  172                    | . symbol_leftshifteq
  173                    | . symbol_rightshifteq
  174                    | . symbol_andeq
  175                    | . symbol_xoreq
  176                    | . symbol_oreq

    symbol_equal         shift, and go to state 134
    symbol_muleq         shift, and go to state 135
    symbol_diveq         shift, and go to state 136
    symbol_modeq         shift, and go to state 137
    symbol_pluseq        shift, and go to state 138
    symbol_minuseq       shift, and go to state 139
    symbol_leftshifteq   shift, and go to state 140
    symbol_rightshifteq  shift, and go to state 141
    symbol_xoreq         shift, and go to state 142
    symbol_andeq         shift, and go to state 143
    symbol_oreq          shift, and go to state 144

    $default  reduce using rule 132 (cast_expression)

    assignment_operator  go to state 145


State 86

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  123                 | unary_operator . cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 146
    unary_operator      go to state 86
    cast_expression     go to state 147


State 87

  134 multiplicative_expression: cast_expression .

    $default  reduce using rule 134 (multiplicative_expression)


State 88

  135 multiplicative_expression: multiplicative_expression . symbol_star cast_expression
  136                          | multiplicative_expression . symbol_divide cast_expression
  137                          | multiplicative_expression . symbol_modulo cast_expression
  138 additive_expression: multiplicative_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_plus, symbol_minus, symbol_leftshift, symbol_rightshift, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_star    shift, and go to state 148
    symbol_divide  shift, and go to state 149
    symbol_modulo  shift, and go to state 150

    $default  reduce using rule 138 (additive_expression)


State 89

  139 additive_expression: additive_expression . symbol_plus multiplicative_expression
  140                    | additive_expression . symbol_minus multiplicative_expression
  141 shift_expression: additive_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_leftshift, symbol_rightshift, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_plus   shift, and go to state 151
    symbol_minus  shift, and go to state 152

    $default  reduce using rule 141 (shift_expression)


State 90

  142 shift_expression: shift_expression . symbol_leftshift additive_expression
  143                 | shift_expression . symbol_rightshift additive_expression
  144 relational_expression: shift_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_leftshift   shift, and go to state 153
    symbol_rightshift  shift, and go to state 154

    $default  reduce using rule 144 (relational_expression)


State 91

  145 relational_expression: relational_expression . symbol_less shift_expression
  146                      | relational_expression . symbol_greater shift_expression
  147                      | relational_expression . symbol_lesseq shift_expression
  148                      | relational_expression . symbol_greatereq shift_expression
  149 equality_expression: relational_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_less       shift, and go to state 155
    symbol_greater    shift, and go to state 156
    symbol_greatereq  shift, and go to state 157
    symbol_lesseq     shift, and go to state 158

    $default  reduce using rule 149 (equality_expression)


State 92

  150 equality_expression: equality_expression . symbol_doubleeq relational_expression
  151                    | equality_expression . symbol_noteq relational_expression
  152 AND_expression: equality_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_doubleeq  shift, and go to state 159
    symbol_noteq     shift, and go to state 160

    $default  reduce using rule 152 (AND_expression)


State 93

  153 AND_expression: AND_expression . symbol_and equality_expression
  154 exclusive_OR_expression: AND_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_and  shift, and go to state 161

    $default  reduce using rule 154 (exclusive_OR_expression)


State 94

  155 exclusive_OR_expression: exclusive_OR_expression . symbol_xor AND_expression
  156 inclusive_OR_expression: exclusive_OR_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_xor  shift, and go to state 162

    $default  reduce using rule 156 (inclusive_OR_expression)


State 95

  157 inclusive_OR_expression: inclusive_OR_expression . symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: inclusive_OR_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_oneor  shift, and go to state 163

    $default  reduce using rule 158 (logical_AND_expression)


State 96

  159 logical_AND_expression: logical_AND_expression . symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: logical_AND_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_doubleor, symbol_question]

    symbol_doubleand  shift, and go to state 164

    $default  reduce using rule 160 (logical_OR_expression)


State 97

  161 logical_OR_expression: logical_OR_expression . symbol_doubleor logical_AND_expression
  162 conditional_expression: logical_OR_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket]
  163                       | logical_OR_expression . symbol_question expression symbol_colon conditional_expression

    symbol_doubleor  shift, and go to state 165
    symbol_question  shift, and go to state 166

    $default  reduce using rule 162 (conditional_expression)


State 98

  164 assignment_expression: conditional_expression .

    $default  reduce using rule 164 (assignment_expression)


State 99

   95 initializer: assignment_expression .

    $default  reduce using rule 95 (initializer)


State 100

    7 declaration_list: declaration_list declaration .

    $default  reduce using rule 7 (declaration_list)


State 101

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   15                  | . keyword_case constant_expression symbol_colon statement
   16                  | . keyword_default symbol_colon statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   17                   | symbol_open_curly_bracket . block_item_list_opt symbol_closed_curly_bracket
   18 block_item_list: . block_item
   19                | . block_item_list block_item
   20 block_item: . declaration
   21           | . statement
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
   34 declaration: . declaration_specifiers init_declarator_list_opt symbol_semi_colon
   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  182 block_item_list_opt: . block_item_list
  183                    | . %empty  [symbol_closed_curly_bracket]
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_extern             shift, and go to state 1
    keyword_static             shift, and go to state 2
    keyword_auto               shift, and go to state 3
    keyword_register           shift, and go to state 4
    keyword_void               shift, and go to state 5
    keyword_char               shift, and go to state 6
    keyword_short              shift, and go to state 7
    keyword_int                shift, and go to state 8
    keyword_long               shift, and go to state 9
    keyword_float              shift, and go to state 10
    keyword_double             shift, and go to state 11
    keyword_signed             shift, and go to state 12
    keyword_unsigned           shift, and go to state 13
    keyword__Bool              shift, and go to state 14
    keyword__Complex           shift, and go to state 15
    keyword__Imaginary         shift, and go to state 16
    keyword_enum               shift, and go to state 17
    keyword_const              shift, and go to state 18
    keyword_restrict           shift, and go to state 19
    keyword_volatile           shift, and go to state 20
    keyword_inline             shift, and go to state 21
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    symbol_semi_colon  reduce using rule 185 (expression_opt)
    $default           reduce using rule 183 (block_item_list_opt)

    statement                  go to state 179
    labeled_statement          go to state 180
    compound_statement         go to state 181
    block_item_list            go to state 182
    block_item                 go to state 183
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    declaration                go to state 188
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    block_item_list_opt        go to state 190
    expression_opt             go to state 191


State 102

    5 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 5 (function_definition)


State 103

   75 direct_declarator: symbol_open_bracket declarator . symbol_closed_bracket

    symbol_closed_bracket  shift, and go to state 192


State 104

   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline
   80 direct_declarator: direct_declarator symbol_closed_bracket . parameter_type_list symbol_closed_bracket
   86 parameter_type_list: . parameter_list
   87                    | . parameter_list symbol_comma symbol_threedot
   88 parameter_list: . parameter_declaration
   89               | . parameter_list symbol_comma parameter_declaration
   90 parameter_declaration: . declaration_specifiers declarator
   91                      | . declaration_specifiers

    keyword_extern      shift, and go to state 1
    keyword_static      shift, and go to state 2
    keyword_auto        shift, and go to state 3
    keyword_register    shift, and go to state 4
    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20
    keyword_inline      shift, and go to state 21

    declaration_specifiers   go to state 193
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    parameter_type_list      go to state 194
    parameter_list           go to state 195
    parameter_declaration    go to state 196


State 105

   81 direct_declarator: direct_declarator symbol_open_bracket . identifier_list_opt symbol_closed_bracket
   92 identifier_list: . identifier
   93                | . identifier_list symbol_comma identifier
  200 identifier_list_opt: . identifier_list
  201                    | . %empty  [symbol_closed_bracket]

    identifier  shift, and go to state 197

    $default  reduce using rule 201 (identifier_list_opt)

    identifier_list      go to state 198
    identifier_list_opt  go to state 199


State 106

   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   76 direct_declarator: direct_declarator symbol_open_square_bracket . type_qualifier_list_opt assignment_expression_opt symbol_closed_square_bracket
   77                  | direct_declarator symbol_open_square_bracket . keyword_static type_qualifier_list_opt assignment_expression symbol_closed_square_bracket
   78                  | direct_declarator symbol_open_square_bracket . type_qualifier_list keyword_static assignment_expression symbol_closed_square_bracket
   79                  | direct_declarator symbol_open_square_bracket . type_qualifier_list_opt symbol_star symbol_closed_square_bracket
   84 type_qualifier_list: . type_qualifier
   85                    | . type_qualifier_list type_qualifier
  196 type_qualifier_list_opt: . type_qualifier_list
  197                        | . %empty  [identifier, constant, string_constant, symbol_open_bracket, symbol_closed_square_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_sizeof]

    keyword_static    shift, and go to state 200
    keyword_const     shift, and go to state 18
    keyword_restrict  shift, and go to state 19
    keyword_volatile  shift, and go to state 20

    $default  reduce using rule 197 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list      go to state 201
    type_qualifier_list_opt  go to state 202


State 107

   68 enumerator: enumeration_constant symbol_equal . constant_expression
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  179 constant_expression: . conditional_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 203
    constant_expression        go to state 204


State 108

   62 enum_specifier: keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket .

    $default  reduce using rule 62 (enum_specifier)


State 109

   63 enum_specifier: keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma . symbol_closed_curly_bracket
   66 enumerator_list: enumerator_list symbol_comma . enumerator
   67 enumerator: . enumeration_constant
   68           | . enumeration_constant symbol_equal constant_expression

    symbol_closed_curly_bracket  shift, and go to state 205
    enumeration_constant         shift, and go to state 62

    enumerator  go to state 206


State 110

  103 designator: symbol_open_square_bracket . constant_expression symbol_closed_square_bracket
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  179 constant_expression: . conditional_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 203
    constant_expression        go to state 207


State 111

  104 designator: symbol_dot . identifier

    identifier  shift, and go to state 208


State 112

   96 initializer: symbol_open_curly_bracket initializer_list . symbol_open_curly_bracket
   97            | symbol_open_curly_bracket initializer_list . symbol_comma symbol_closed_curly_bracket
   99 initializer_list: initializer_list . symbol_comma designation_opt initializer

    symbol_open_curly_bracket  shift, and go to state 209
    symbol_comma               shift, and go to state 210


State 113

  202 designation_opt: designation .

    $default  reduce using rule 202 (designation_opt)


State 114

  100 designation: designator_list . symbol_equal
  102 designator_list: designator_list . designator
  103 designator: . symbol_open_square_bracket constant_expression symbol_closed_square_bracket
  104           | . symbol_dot identifier

    symbol_equal                shift, and go to state 211
    symbol_open_square_bracket  shift, and go to state 110
    symbol_dot                  shift, and go to state 111

    designator  go to state 212


State 115

  101 designator_list: designator .

    $default  reduce using rule 101 (designator_list)


State 116

   95 initializer: . assignment_expression
   96            | . symbol_open_curly_bracket initializer_list symbol_open_curly_bracket
   97            | . symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
   98 initializer_list: designation_opt . initializer
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression

    identifier                 shift, and go to state 69
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 72
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_sizeof             shift, and go to state 81

    initializer                go to state 213
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 99


State 117

   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   60 specifier_qualifier_list: . type_specifier specifier_qualifier_list_opt
   60                         | type_specifier . specifier_qualifier_list_opt
   61                         | . type_qualifier specifier_qualifier_list_opt
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
  190 specifier_qualifier_list_opt: . specifier_qualifier_list
  191                             | . %empty  [symbol_closed_bracket]

    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20

    $default  reduce using rule 191 (specifier_qualifier_list_opt)

    type_specifier                go to state 117
    specifier_qualifier_list      go to state 214
    enum_specifier                go to state 29
    type_qualifier                go to state 119
    specifier_qualifier_list_opt  go to state 215


State 118

   94 type_name: specifier_qualifier_list .

    $default  reduce using rule 94 (type_name)


State 119

   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   60 specifier_qualifier_list: . type_specifier specifier_qualifier_list_opt
   61                         | . type_qualifier specifier_qualifier_list_opt
   61                         | type_qualifier . specifier_qualifier_list_opt
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
  190 specifier_qualifier_list_opt: . specifier_qualifier_list
  191                             | . %empty  [symbol_closed_bracket]

    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20

    $default  reduce using rule 191 (specifier_qualifier_list_opt)

    type_specifier                go to state 117
    specifier_qualifier_list      go to state 214
    enum_specifier                go to state 29
    type_qualifier                go to state 119
    specifier_qualifier_list_opt  go to state 216


State 120

  116 postfix_expression: symbol_open_bracket type_name . symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | symbol_open_bracket type_name . symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  133 cast_expression: symbol_open_bracket type_name . symbol_closed_bracket cast_expression

    symbol_closed_bracket  shift, and go to state 217


State 121

  177 expression: assignment_expression .

    $default  reduce using rule 177 (expression)


State 122

  108 primary_expression: symbol_open_bracket expression . symbol_closed_bracket
  178 expression: expression . symbol_comma assignment_expression

    symbol_closed_bracket  shift, and go to state 218
    symbol_comma           shift, and go to state 219


State 123

   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   60 specifier_qualifier_list: . type_specifier specifier_qualifier_list_opt
   61                         | . type_qualifier specifier_qualifier_list_opt
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   94 type_name: . specifier_qualifier_list
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  108                   | symbol_open_bracket . expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  116                   | symbol_open_bracket . type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  117                   | symbol_open_bracket . type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_void         shift, and go to state 5
    keyword_char         shift, and go to state 6
    keyword_short        shift, and go to state 7
    keyword_int          shift, and go to state 8
    keyword_long         shift, and go to state 9
    keyword_float        shift, and go to state 10
    keyword_double       shift, and go to state 11
    keyword_signed       shift, and go to state 12
    keyword_unsigned     shift, and go to state 13
    keyword__Bool        shift, and go to state 14
    keyword__Complex     shift, and go to state 15
    keyword__Imaginary   shift, and go to state 16
    keyword_enum         shift, and go to state 17
    keyword_const        shift, and go to state 18
    keyword_restrict     shift, and go to state 19
    keyword_volatile     shift, and go to state 20
    keyword_sizeof       shift, and go to state 81

    type_specifier             go to state 117
    specifier_qualifier_list   go to state 118
    enum_specifier             go to state 29
    type_qualifier             go to state 119
    type_name                  go to state 220
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 122


State 124

  121 unary_expression: symbol_double_plus unary_expression .

    $default  reduce using rule 121 (unary_expression)


State 125

  122 unary_expression: symbol_double_minus unary_expression .

    $default  reduce using rule 122 (unary_expression)


State 126

   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   60 specifier_qualifier_list: . type_specifier specifier_qualifier_list_opt
   61                         | . type_qualifier specifier_qualifier_list_opt
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   94 type_name: . specifier_qualifier_list
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  108                   | symbol_open_bracket . expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  116                   | symbol_open_bracket . type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  117                   | symbol_open_bracket . type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  125                 | keyword_sizeof symbol_open_bracket . type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_void         shift, and go to state 5
    keyword_char         shift, and go to state 6
    keyword_short        shift, and go to state 7
    keyword_int          shift, and go to state 8
    keyword_long         shift, and go to state 9
    keyword_float        shift, and go to state 10
    keyword_double       shift, and go to state 11
    keyword_signed       shift, and go to state 12
    keyword_unsigned     shift, and go to state 13
    keyword__Bool        shift, and go to state 14
    keyword__Complex     shift, and go to state 15
    keyword__Imaginary   shift, and go to state 16
    keyword_enum         shift, and go to state 17
    keyword_const        shift, and go to state 18
    keyword_restrict     shift, and go to state 19
    keyword_volatile     shift, and go to state 20
    keyword_sizeof       shift, and go to state 81

    type_specifier             go to state 117
    specifier_qualifier_list   go to state 118
    enum_specifier             go to state 29
    type_qualifier             go to state 119
    type_name                  go to state 221
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 122


State 127

  124 unary_expression: keyword_sizeof unary_expression .

    $default  reduce using rule 124 (unary_expression)


State 128

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  111                   | postfix_expression symbol_open_bracket . argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  118 argument_expression_list: . assignment_expression
  119                         | . argument_expression_list symbol_comma assignment_expression
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  204 argument_expression_list_opt: . argument_expression_list
  205                             | . %empty  [symbol_closed_bracket]

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    $default  reduce using rule 205 (argument_expression_list_opt)

    primary_expression            go to state 83
    postfix_expression            go to state 84
    argument_expression_list      go to state 222
    unary_expression              go to state 85
    unary_operator                go to state 86
    cast_expression               go to state 87
    multiplicative_expression     go to state 88
    additive_expression           go to state 89
    shift_expression              go to state 90
    relational_expression         go to state 91
    equality_expression           go to state 92
    AND_expression                go to state 93
    exclusive_OR_expression       go to state 94
    inclusive_OR_expression       go to state 95
    logical_AND_expression        go to state 96
    logical_OR_expression         go to state 97
    conditional_expression        go to state 98
    assignment_expression         go to state 223
    argument_expression_list_opt  go to state 224


State 129

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  110                   | postfix_expression symbol_open_square_bracket . expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 225


State 130

  112 postfix_expression: postfix_expression symbol_dot . identifier

    identifier  shift, and go to state 226


State 131

  113 postfix_expression: postfix_expression symbol_dash_greater . identifier

    identifier  shift, and go to state 227


State 132

  114 postfix_expression: postfix_expression symbol_double_plus .

    $default  reduce using rule 114 (postfix_expression)


State 133

  115 postfix_expression: postfix_expression symbol_double_minus .

    $default  reduce using rule 115 (postfix_expression)


State 134

  166 assignment_operator: symbol_equal .

    $default  reduce using rule 166 (assignment_operator)


State 135

  167 assignment_operator: symbol_muleq .

    $default  reduce using rule 167 (assignment_operator)


State 136

  168 assignment_operator: symbol_diveq .

    $default  reduce using rule 168 (assignment_operator)


State 137

  169 assignment_operator: symbol_modeq .

    $default  reduce using rule 169 (assignment_operator)


State 138

  170 assignment_operator: symbol_pluseq .

    $default  reduce using rule 170 (assignment_operator)


State 139

  171 assignment_operator: symbol_minuseq .

    $default  reduce using rule 171 (assignment_operator)


State 140

  172 assignment_operator: symbol_leftshifteq .

    $default  reduce using rule 172 (assignment_operator)


State 141

  173 assignment_operator: symbol_rightshifteq .

    $default  reduce using rule 173 (assignment_operator)


State 142

  175 assignment_operator: symbol_xoreq .

    $default  reduce using rule 175 (assignment_operator)


State 143

  174 assignment_operator: symbol_andeq .

    $default  reduce using rule 174 (assignment_operator)


State 144

  176 assignment_operator: symbol_oreq .

    $default  reduce using rule 176 (assignment_operator)


State 145

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  165                      | unary_expression assignment_operator . assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 228


State 146

  132 cast_expression: unary_expression .

    $default  reduce using rule 132 (cast_expression)


State 147

  123 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 123 (unary_expression)


State 148

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  135 multiplicative_expression: multiplicative_expression symbol_star . cast_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 146
    unary_operator      go to state 86
    cast_expression     go to state 229


State 149

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  136 multiplicative_expression: multiplicative_expression symbol_divide . cast_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 146
    unary_operator      go to state 86
    cast_expression     go to state 230


State 150

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  137 multiplicative_expression: multiplicative_expression symbol_modulo . cast_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 146
    unary_operator      go to state 86
    cast_expression     go to state 231


State 151

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  139 additive_expression: additive_expression symbol_plus . multiplicative_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 232


State 152

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  140 additive_expression: additive_expression symbol_minus . multiplicative_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 233


State 153

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  142 shift_expression: shift_expression symbol_leftshift . additive_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 234


State 154

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  143 shift_expression: shift_expression symbol_rightshift . additive_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 235


State 155

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  145 relational_expression: relational_expression symbol_less . shift_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 236


State 156

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  146 relational_expression: relational_expression symbol_greater . shift_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 237


State 157

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  148 relational_expression: relational_expression symbol_greatereq . shift_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 238


State 158

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  147 relational_expression: relational_expression symbol_lesseq . shift_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 239


State 159

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  150 equality_expression: equality_expression symbol_doubleeq . relational_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 240


State 160

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  151 equality_expression: equality_expression symbol_noteq . relational_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 241


State 161

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  153 AND_expression: AND_expression symbol_and . equality_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 242


State 162

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  155 exclusive_OR_expression: exclusive_OR_expression symbol_xor . AND_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 243


State 163

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  157 inclusive_OR_expression: inclusive_OR_expression symbol_oneor . exclusive_OR_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 244


State 164

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  159 logical_AND_expression: logical_AND_expression symbol_doubleand . inclusive_OR_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 245


State 165

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  161 logical_OR_expression: logical_OR_expression symbol_doubleor . logical_AND_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 246


State 166

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  163                       | logical_OR_expression symbol_question . expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 247


State 167

   14 labeled_statement: identifier . symbol_colon statement
  105 primary_expression: identifier .  [symbol_semi_colon, symbol_open_bracket, symbol_comma, symbol_equal, symbol_open_square_bracket, symbol_star, symbol_dot, symbol_dash_greater, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_divide, symbol_modulo, symbol_leftshift, symbol_rightshift, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand, symbol_muleq, symbol_diveq, symbol_modeq, symbol_pluseq, symbol_minuseq, symbol_leftshifteq, symbol_rightshifteq, symbol_xoreq, symbol_andeq, symbol_oreq]

    symbol_colon  shift, and go to state 248

    $default  reduce using rule 105 (primary_expression)


State 168

   23 selection_statement: keyword_if . symbol_open_bracket expression symbol_closed_bracket statement
   24                    | keyword_if . symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement

    symbol_open_bracket  shift, and go to state 249


State 169

   25 selection_statement: keyword_switch . symbol_open_bracket expression symbol_closed_bracket statement

    symbol_open_bracket  shift, and go to state 250


State 170

   26 iteration_statement: keyword_while . symbol_open_bracket expression symbol_closed_bracket statement

    symbol_open_bracket  shift, and go to state 251


State 171

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   15                  | . keyword_case constant_expression symbol_colon statement
   16                  | . keyword_default symbol_colon statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   27                    | keyword_do . statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    $default  reduce using rule 185 (expression_opt)

    statement                  go to state 252
    labeled_statement          go to state 180
    compound_statement         go to state 181
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 191


State 172

   28 iteration_statement: keyword_for . symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | keyword_for . symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement

    symbol_open_bracket  shift, and go to state 253


State 173

   30 jump_statement: keyword_goto . identifier symbol_semi_colon

    identifier  shift, and go to state 254


State 174

   31 jump_statement: keyword_continue . symbol_semi_colon

    symbol_semi_colon  shift, and go to state 255


State 175

   32 jump_statement: keyword_break . symbol_semi_colon

    symbol_semi_colon  shift, and go to state 256


State 176

   33 jump_statement: keyword_return . expression_opt symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 257


State 177

   16 labeled_statement: keyword_default . symbol_colon statement

    symbol_colon  shift, and go to state 258


State 178

   15 labeled_statement: keyword_case . constant_expression symbol_colon statement
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  179 constant_expression: . conditional_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 203
    constant_expression        go to state 259


State 179

   21 block_item: statement .

    $default  reduce using rule 21 (block_item)


State 180

    8 statement: labeled_statement .

    $default  reduce using rule 8 (statement)


State 181

    9 statement: compound_statement .

    $default  reduce using rule 9 (statement)


State 182

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   15                  | . keyword_case constant_expression symbol_colon statement
   16                  | . keyword_default symbol_colon statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   19 block_item_list: block_item_list . block_item
   20 block_item: . declaration
   21           | . statement
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
   34 declaration: . declaration_specifiers init_declarator_list_opt symbol_semi_colon
   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  182 block_item_list_opt: block_item_list .  [symbol_closed_curly_bracket]
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_extern             shift, and go to state 1
    keyword_static             shift, and go to state 2
    keyword_auto               shift, and go to state 3
    keyword_register           shift, and go to state 4
    keyword_void               shift, and go to state 5
    keyword_char               shift, and go to state 6
    keyword_short              shift, and go to state 7
    keyword_int                shift, and go to state 8
    keyword_long               shift, and go to state 9
    keyword_float              shift, and go to state 10
    keyword_double             shift, and go to state 11
    keyword_signed             shift, and go to state 12
    keyword_unsigned           shift, and go to state 13
    keyword__Bool              shift, and go to state 14
    keyword__Complex           shift, and go to state 15
    keyword__Imaginary         shift, and go to state 16
    keyword_enum               shift, and go to state 17
    keyword_const              shift, and go to state 18
    keyword_restrict           shift, and go to state 19
    keyword_volatile           shift, and go to state 20
    keyword_inline             shift, and go to state 21
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    symbol_semi_colon  reduce using rule 185 (expression_opt)
    $default           reduce using rule 182 (block_item_list_opt)

    statement                  go to state 179
    labeled_statement          go to state 180
    compound_statement         go to state 181
    block_item                 go to state 260
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    declaration                go to state 188
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 191


State 183

   18 block_item_list: block_item .

    $default  reduce using rule 18 (block_item_list)


State 184

   10 statement: expression_statement .

    $default  reduce using rule 10 (statement)


State 185

   11 statement: selection_statement .

    $default  reduce using rule 11 (statement)


State 186

   12 statement: iteration_statement .

    $default  reduce using rule 12 (statement)


State 187

   13 statement: jump_statement .

    $default  reduce using rule 13 (statement)


State 188

   20 block_item: declaration .

    $default  reduce using rule 20 (block_item)


State 189

  178 expression: expression . symbol_comma assignment_expression
  184 expression_opt: expression .  [symbol_semi_colon, symbol_closed_bracket]

    symbol_comma  shift, and go to state 219

    $default  reduce using rule 184 (expression_opt)


State 190

   17 compound_statement: symbol_open_curly_bracket block_item_list_opt . symbol_closed_curly_bracket

    symbol_closed_curly_bracket  shift, and go to state 261


State 191

   22 expression_statement: expression_opt . symbol_semi_colon

    symbol_semi_colon  shift, and go to state 262


State 192

   75 direct_declarator: symbol_open_bracket declarator symbol_closed_bracket .

    $default  reduce using rule 75 (direct_declarator)


State 193

   73 declarator: . pointer_opt direct_declarator
   82 pointer: . symbol_star type_qualifier_list_opt
   83        | . symbol_star type_qualifier_list_opt pointer
   90 parameter_declaration: declaration_specifiers . declarator
   91                      | declaration_specifiers .  [symbol_closed_bracket, symbol_comma]
  194 pointer_opt: . pointer
  195            | . %empty  [identifier, symbol_open_bracket]

    symbol_star  shift, and go to state 36

    identifier           reduce using rule 195 (pointer_opt)
    symbol_open_bracket  reduce using rule 195 (pointer_opt)
    $default             reduce using rule 91 (parameter_declaration)

    declarator   go to state 263
    pointer      go to state 40
    pointer_opt  go to state 42


State 194

   80 direct_declarator: direct_declarator symbol_closed_bracket parameter_type_list . symbol_closed_bracket

    symbol_closed_bracket  shift, and go to state 264


State 195

   86 parameter_type_list: parameter_list .  [symbol_closed_bracket]
   87                    | parameter_list . symbol_comma symbol_threedot
   89 parameter_list: parameter_list . symbol_comma parameter_declaration

    symbol_comma  shift, and go to state 265

    $default  reduce using rule 86 (parameter_type_list)


State 196

   88 parameter_list: parameter_declaration .

    $default  reduce using rule 88 (parameter_list)


State 197

   92 identifier_list: identifier .

    $default  reduce using rule 92 (identifier_list)


State 198

   93 identifier_list: identifier_list . symbol_comma identifier
  200 identifier_list_opt: identifier_list .  [symbol_closed_bracket]

    symbol_comma  shift, and go to state 266

    $default  reduce using rule 200 (identifier_list_opt)


State 199

   81 direct_declarator: direct_declarator symbol_open_bracket identifier_list_opt . symbol_closed_bracket

    symbol_closed_bracket  shift, and go to state 267


State 200

   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   77 direct_declarator: direct_declarator symbol_open_square_bracket keyword_static . type_qualifier_list_opt assignment_expression symbol_closed_square_bracket
   84 type_qualifier_list: . type_qualifier
   85                    | . type_qualifier_list type_qualifier
  196 type_qualifier_list_opt: . type_qualifier_list
  197                        | . %empty  [identifier, constant, string_constant, symbol_open_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_sizeof]

    keyword_const     shift, and go to state 18
    keyword_restrict  shift, and go to state 19
    keyword_volatile  shift, and go to state 20

    $default  reduce using rule 197 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list      go to state 50
    type_qualifier_list_opt  go to state 268


State 201

   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   78 direct_declarator: direct_declarator symbol_open_square_bracket type_qualifier_list . keyword_static assignment_expression symbol_closed_square_bracket
   85 type_qualifier_list: type_qualifier_list . type_qualifier
  196 type_qualifier_list_opt: type_qualifier_list .  [identifier, constant, string_constant, symbol_open_bracket, symbol_closed_square_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_sizeof]

    keyword_static    shift, and go to state 269
    keyword_const     shift, and go to state 18
    keyword_restrict  shift, and go to state 19
    keyword_volatile  shift, and go to state 20

    $default  reduce using rule 196 (type_qualifier_list_opt)

    type_qualifier  go to state 65


State 202

   76 direct_declarator: direct_declarator symbol_open_square_bracket type_qualifier_list_opt . assignment_expression_opt symbol_closed_square_bracket
   79                  | direct_declarator symbol_open_square_bracket type_qualifier_list_opt . symbol_star symbol_closed_square_bracket
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  198 assignment_expression_opt: . assignment_expression
  199                          | . %empty  [symbol_closed_square_bracket]

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 270
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    $default  reduce using rule 199 (assignment_expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 271
    assignment_expression_opt  go to state 272


State 203

  179 constant_expression: conditional_expression .

    $default  reduce using rule 179 (constant_expression)


State 204

   68 enumerator: enumeration_constant symbol_equal constant_expression .

    $default  reduce using rule 68 (enumerator)


State 205

   63 enum_specifier: keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket .

    $default  reduce using rule 63 (enum_specifier)


State 206

   66 enumerator_list: enumerator_list symbol_comma enumerator .

    $default  reduce using rule 66 (enumerator_list)


State 207

  103 designator: symbol_open_square_bracket constant_expression . symbol_closed_square_bracket

    symbol_closed_square_bracket  shift, and go to state 273


State 208

  104 designator: symbol_dot identifier .

    $default  reduce using rule 104 (designator)


State 209

   96 initializer: symbol_open_curly_bracket initializer_list symbol_open_curly_bracket .

    $default  reduce using rule 96 (initializer)


State 210

   97 initializer: symbol_open_curly_bracket initializer_list symbol_comma . symbol_closed_curly_bracket
   99 initializer_list: initializer_list symbol_comma . designation_opt initializer
  100 designation: . designator_list symbol_equal
  101 designator_list: . designator
  102                | . designator_list designator
  103 designator: . symbol_open_square_bracket constant_expression symbol_closed_square_bracket
  104           | . symbol_dot identifier
  202 designation_opt: . designation
  203                | . %empty  [identifier, constant, string_constant, symbol_open_curly_bracket, symbol_open_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_sizeof]

    symbol_closed_curly_bracket  shift, and go to state 274
    symbol_open_square_bracket   shift, and go to state 110
    symbol_dot                   shift, and go to state 111

    $default  reduce using rule 203 (designation_opt)

    designation      go to state 113
    designator_list  go to state 114
    designator       go to state 115
    designation_opt  go to state 275


State 211

  100 designation: designator_list symbol_equal .

    $default  reduce using rule 100 (designation)


State 212

  102 designator_list: designator_list designator .

    $default  reduce using rule 102 (designator_list)


State 213

   98 initializer_list: designation_opt initializer .

    $default  reduce using rule 98 (initializer_list)


State 214

  190 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 190 (specifier_qualifier_list_opt)


State 215

   60 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 60 (specifier_qualifier_list)


State 216

   61 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 61 (specifier_qualifier_list)


State 217

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  116                   | symbol_open_bracket type_name symbol_closed_bracket . symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  117                   | symbol_open_bracket type_name symbol_closed_bracket . symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  133                | symbol_open_bracket type_name symbol_closed_bracket . cast_expression

    identifier                 shift, and go to state 69
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 276
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_sizeof             shift, and go to state 81

    primary_expression  go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 146
    unary_operator      go to state 86
    cast_expression     go to state 277


State 218

  108 primary_expression: symbol_open_bracket expression symbol_closed_bracket .

    $default  reduce using rule 108 (primary_expression)


State 219

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  178 expression: expression symbol_comma . assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 278


State 220

  116 postfix_expression: symbol_open_bracket type_name . symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | symbol_open_bracket type_name . symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket

    symbol_closed_bracket  shift, and go to state 279


State 221

  116 postfix_expression: symbol_open_bracket type_name . symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | symbol_open_bracket type_name . symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  125 unary_expression: keyword_sizeof symbol_open_bracket type_name . symbol_closed_bracket

    symbol_closed_bracket  shift, and go to state 280


State 222

  119 argument_expression_list: argument_expression_list . symbol_comma assignment_expression
  204 argument_expression_list_opt: argument_expression_list .  [symbol_closed_bracket]

    symbol_comma  shift, and go to state 281

    $default  reduce using rule 204 (argument_expression_list_opt)


State 223

  118 argument_expression_list: assignment_expression .

    $default  reduce using rule 118 (argument_expression_list)


State 224

  111 postfix_expression: postfix_expression symbol_open_bracket argument_expression_list_opt . symbol_closed_bracket

    symbol_closed_bracket  shift, and go to state 282


State 225

  110 postfix_expression: postfix_expression symbol_open_square_bracket expression . symbol_closed_square_bracket
  178 expression: expression . symbol_comma assignment_expression

    symbol_comma                  shift, and go to state 219
    symbol_closed_square_bracket  shift, and go to state 283


State 226

  112 postfix_expression: postfix_expression symbol_dot identifier .

    $default  reduce using rule 112 (postfix_expression)


State 227

  113 postfix_expression: postfix_expression symbol_dash_greater identifier .

    $default  reduce using rule 113 (postfix_expression)


State 228

  165 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 165 (assignment_expression)


State 229

  135 multiplicative_expression: multiplicative_expression symbol_star cast_expression .

    $default  reduce using rule 135 (multiplicative_expression)


State 230

  136 multiplicative_expression: multiplicative_expression symbol_divide cast_expression .

    $default  reduce using rule 136 (multiplicative_expression)


State 231

  137 multiplicative_expression: multiplicative_expression symbol_modulo cast_expression .

    $default  reduce using rule 137 (multiplicative_expression)


State 232

  135 multiplicative_expression: multiplicative_expression . symbol_star cast_expression
  136                          | multiplicative_expression . symbol_divide cast_expression
  137                          | multiplicative_expression . symbol_modulo cast_expression
  139 additive_expression: additive_expression symbol_plus multiplicative_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_plus, symbol_minus, symbol_leftshift, symbol_rightshift, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_star    shift, and go to state 148
    symbol_divide  shift, and go to state 149
    symbol_modulo  shift, and go to state 150

    $default  reduce using rule 139 (additive_expression)


State 233

  135 multiplicative_expression: multiplicative_expression . symbol_star cast_expression
  136                          | multiplicative_expression . symbol_divide cast_expression
  137                          | multiplicative_expression . symbol_modulo cast_expression
  140 additive_expression: additive_expression symbol_minus multiplicative_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_plus, symbol_minus, symbol_leftshift, symbol_rightshift, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_star    shift, and go to state 148
    symbol_divide  shift, and go to state 149
    symbol_modulo  shift, and go to state 150

    $default  reduce using rule 140 (additive_expression)


State 234

  139 additive_expression: additive_expression . symbol_plus multiplicative_expression
  140                    | additive_expression . symbol_minus multiplicative_expression
  142 shift_expression: shift_expression symbol_leftshift additive_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_leftshift, symbol_rightshift, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_plus   shift, and go to state 151
    symbol_minus  shift, and go to state 152

    $default  reduce using rule 142 (shift_expression)


State 235

  139 additive_expression: additive_expression . symbol_plus multiplicative_expression
  140                    | additive_expression . symbol_minus multiplicative_expression
  143 shift_expression: shift_expression symbol_rightshift additive_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_leftshift, symbol_rightshift, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_plus   shift, and go to state 151
    symbol_minus  shift, and go to state 152

    $default  reduce using rule 143 (shift_expression)


State 236

  142 shift_expression: shift_expression . symbol_leftshift additive_expression
  143                 | shift_expression . symbol_rightshift additive_expression
  145 relational_expression: relational_expression symbol_less shift_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_leftshift   shift, and go to state 153
    symbol_rightshift  shift, and go to state 154

    $default  reduce using rule 145 (relational_expression)


State 237

  142 shift_expression: shift_expression . symbol_leftshift additive_expression
  143                 | shift_expression . symbol_rightshift additive_expression
  146 relational_expression: relational_expression symbol_greater shift_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_leftshift   shift, and go to state 153
    symbol_rightshift  shift, and go to state 154

    $default  reduce using rule 146 (relational_expression)


State 238

  142 shift_expression: shift_expression . symbol_leftshift additive_expression
  143                 | shift_expression . symbol_rightshift additive_expression
  148 relational_expression: relational_expression symbol_greatereq shift_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_leftshift   shift, and go to state 153
    symbol_rightshift  shift, and go to state 154

    $default  reduce using rule 148 (relational_expression)


State 239

  142 shift_expression: shift_expression . symbol_leftshift additive_expression
  143                 | shift_expression . symbol_rightshift additive_expression
  147 relational_expression: relational_expression symbol_lesseq shift_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_leftshift   shift, and go to state 153
    symbol_rightshift  shift, and go to state 154

    $default  reduce using rule 147 (relational_expression)


State 240

  145 relational_expression: relational_expression . symbol_less shift_expression
  146                      | relational_expression . symbol_greater shift_expression
  147                      | relational_expression . symbol_lesseq shift_expression
  148                      | relational_expression . symbol_greatereq shift_expression
  150 equality_expression: equality_expression symbol_doubleeq relational_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_less       shift, and go to state 155
    symbol_greater    shift, and go to state 156
    symbol_greatereq  shift, and go to state 157
    symbol_lesseq     shift, and go to state 158

    $default  reduce using rule 150 (equality_expression)


State 241

  145 relational_expression: relational_expression . symbol_less shift_expression
  146                      | relational_expression . symbol_greater shift_expression
  147                      | relational_expression . symbol_lesseq shift_expression
  148                      | relational_expression . symbol_greatereq shift_expression
  151 equality_expression: equality_expression symbol_noteq relational_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_less       shift, and go to state 155
    symbol_greater    shift, and go to state 156
    symbol_greatereq  shift, and go to state 157
    symbol_lesseq     shift, and go to state 158

    $default  reduce using rule 151 (equality_expression)


State 242

  150 equality_expression: equality_expression . symbol_doubleeq relational_expression
  151                    | equality_expression . symbol_noteq relational_expression
  153 AND_expression: AND_expression symbol_and equality_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_and, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_doubleeq  shift, and go to state 159
    symbol_noteq     shift, and go to state 160

    $default  reduce using rule 153 (AND_expression)


State 243

  153 AND_expression: AND_expression . symbol_and equality_expression
  155 exclusive_OR_expression: exclusive_OR_expression symbol_xor AND_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_and  shift, and go to state 161

    $default  reduce using rule 155 (exclusive_OR_expression)


State 244

  155 exclusive_OR_expression: exclusive_OR_expression . symbol_xor AND_expression
  157 inclusive_OR_expression: inclusive_OR_expression symbol_oneor exclusive_OR_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_xor  shift, and go to state 162

    $default  reduce using rule 157 (inclusive_OR_expression)


State 245

  157 inclusive_OR_expression: inclusive_OR_expression . symbol_oneor exclusive_OR_expression
  159 logical_AND_expression: logical_AND_expression symbol_doubleand inclusive_OR_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_doubleor, symbol_question, symbol_doubleand]

    symbol_oneor  shift, and go to state 163

    $default  reduce using rule 159 (logical_AND_expression)


State 246

  159 logical_AND_expression: logical_AND_expression . symbol_doubleand inclusive_OR_expression
  161 logical_OR_expression: logical_OR_expression symbol_doubleor logical_AND_expression .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_closed_square_bracket, symbol_doubleor, symbol_question]

    symbol_doubleand  shift, and go to state 164

    $default  reduce using rule 161 (logical_OR_expression)


State 247

  163 conditional_expression: logical_OR_expression symbol_question expression . symbol_colon conditional_expression
  178 expression: expression . symbol_comma assignment_expression

    symbol_colon  shift, and go to state 284
    symbol_comma  shift, and go to state 219


State 248

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   14                  | identifier symbol_colon . statement
   15                  | . keyword_case constant_expression symbol_colon statement
   16                  | . keyword_default symbol_colon statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    $default  reduce using rule 185 (expression_opt)

    statement                  go to state 285
    labeled_statement          go to state 180
    compound_statement         go to state 181
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 191


State 249

   23 selection_statement: keyword_if symbol_open_bracket . expression symbol_closed_bracket statement
   24                    | keyword_if symbol_open_bracket . expression symbol_closed_bracket statement keyword_else statement
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 286


State 250

   25 selection_statement: keyword_switch symbol_open_bracket . expression symbol_closed_bracket statement
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 287


State 251

   26 iteration_statement: keyword_while symbol_open_bracket . expression symbol_closed_bracket statement
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 288


State 252

   27 iteration_statement: keyword_do statement . keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon

    keyword_while  shift, and go to state 289


State 253

   28 iteration_statement: keyword_for symbol_open_bracket . expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | keyword_for symbol_open_bracket . declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   34 declaration: . declaration_specifiers init_declarator_list_opt symbol_semi_colon
   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_extern       shift, and go to state 1
    keyword_static       shift, and go to state 2
    keyword_auto         shift, and go to state 3
    keyword_register     shift, and go to state 4
    keyword_void         shift, and go to state 5
    keyword_char         shift, and go to state 6
    keyword_short        shift, and go to state 7
    keyword_int          shift, and go to state 8
    keyword_long         shift, and go to state 9
    keyword_float        shift, and go to state 10
    keyword_double       shift, and go to state 11
    keyword_signed       shift, and go to state 12
    keyword_unsigned     shift, and go to state 13
    keyword__Bool        shift, and go to state 14
    keyword__Complex     shift, and go to state 15
    keyword__Imaginary   shift, and go to state 16
    keyword_enum         shift, and go to state 17
    keyword_const        shift, and go to state 18
    keyword_restrict     shift, and go to state 19
    keyword_volatile     shift, and go to state 20
    keyword_inline       shift, and go to state 21
    keyword_sizeof       shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    declaration                go to state 290
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 27
    type_specifier             go to state 28
    enum_specifier             go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 291


State 254

   30 jump_statement: keyword_goto identifier . symbol_semi_colon

    symbol_semi_colon  shift, and go to state 292


State 255

   31 jump_statement: keyword_continue symbol_semi_colon .

    $default  reduce using rule 31 (jump_statement)


State 256

   32 jump_statement: keyword_break symbol_semi_colon .

    $default  reduce using rule 32 (jump_statement)


State 257

   33 jump_statement: keyword_return expression_opt . symbol_semi_colon

    symbol_semi_colon  shift, and go to state 293


State 258

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   15                  | . keyword_case constant_expression symbol_colon statement
   16                  | . keyword_default symbol_colon statement
   16                  | keyword_default symbol_colon . statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    $default  reduce using rule 185 (expression_opt)

    statement                  go to state 294
    labeled_statement          go to state 180
    compound_statement         go to state 181
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 191


State 259

   15 labeled_statement: keyword_case constant_expression . symbol_colon statement

    symbol_colon  shift, and go to state 295


State 260

   19 block_item_list: block_item_list block_item .

    $default  reduce using rule 19 (block_item_list)


State 261

   17 compound_statement: symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket .

    $default  reduce using rule 17 (compound_statement)


State 262

   22 expression_statement: expression_opt symbol_semi_colon .

    $default  reduce using rule 22 (expression_statement)


State 263

   90 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 90 (parameter_declaration)


State 264

   80 direct_declarator: direct_declarator symbol_closed_bracket parameter_type_list symbol_closed_bracket .

    $default  reduce using rule 80 (direct_declarator)


State 265

   35 declaration_specifiers: . storage_class_specifier declaration_specifiers_opt
   36                       | . type_specifier declaration_specifiers_opt
   37                       | . type_qualifier declaration_specifiers_opt
   38                       | . function_specifier declaration_specifiers_opt
   43 storage_class_specifier: . keyword_extern
   44                        | . keyword_static
   45                        | . keyword_auto
   46                        | . keyword_register
   47 type_specifier: . keyword_void
   48               | . keyword_char
   49               | . keyword_short
   50               | . keyword_int
   51               | . keyword_long
   52               | . keyword_float
   53               | . keyword_double
   54               | . keyword_signed
   55               | . keyword_unsigned
   56               | . keyword__Bool
   57               | . keyword__Complex
   58               | . keyword__Imaginary
   59               | . enum_specifier
   62 enum_specifier: . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_closed_curly_bracket
   63               | . keyword_enum identifier_opt symbol_open_curly_bracket enumerator_list symbol_comma symbol_closed_curly_bracket
   64               | . keyword_enum identifier
   69 type_qualifier: . keyword_const
   70               | . keyword_restrict
   71               | . keyword_volatile
   72 function_specifier: . keyword_inline
   87 parameter_type_list: parameter_list symbol_comma . symbol_threedot
   89 parameter_list: parameter_list symbol_comma . parameter_declaration
   90 parameter_declaration: . declaration_specifiers declarator
   91                      | . declaration_specifiers

    symbol_threedot     shift, and go to state 296
    keyword_extern      shift, and go to state 1
    keyword_static      shift, and go to state 2
    keyword_auto        shift, and go to state 3
    keyword_register    shift, and go to state 4
    keyword_void        shift, and go to state 5
    keyword_char        shift, and go to state 6
    keyword_short       shift, and go to state 7
    keyword_int         shift, and go to state 8
    keyword_long        shift, and go to state 9
    keyword_float       shift, and go to state 10
    keyword_double      shift, and go to state 11
    keyword_signed      shift, and go to state 12
    keyword_unsigned    shift, and go to state 13
    keyword__Bool       shift, and go to state 14
    keyword__Complex    shift, and go to state 15
    keyword__Imaginary  shift, and go to state 16
    keyword_enum        shift, and go to state 17
    keyword_const       shift, and go to state 18
    keyword_restrict    shift, and go to state 19
    keyword_volatile    shift, and go to state 20
    keyword_inline      shift, and go to state 21

    declaration_specifiers   go to state 193
    storage_class_specifier  go to state 27
    type_specifier           go to state 28
    enum_specifier           go to state 29
    type_qualifier           go to state 30
    function_specifier       go to state 31
    parameter_declaration    go to state 297


State 266

   93 identifier_list: identifier_list symbol_comma . identifier

    identifier  shift, and go to state 298


State 267

   81 direct_declarator: direct_declarator symbol_open_bracket identifier_list_opt symbol_closed_bracket .

    $default  reduce using rule 81 (direct_declarator)


State 268

   77 direct_declarator: direct_declarator symbol_open_square_bracket keyword_static type_qualifier_list_opt . assignment_expression symbol_closed_square_bracket
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 299


State 269

   78 direct_declarator: direct_declarator symbol_open_square_bracket type_qualifier_list keyword_static . assignment_expression symbol_closed_square_bracket
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 300


State 270

   79 direct_declarator: direct_declarator symbol_open_square_bracket type_qualifier_list_opt symbol_star . symbol_closed_square_bracket
  127 unary_operator: symbol_star .  [identifier, constant, string_constant, symbol_open_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_sizeof]

    symbol_closed_square_bracket  shift, and go to state 301

    $default  reduce using rule 127 (unary_operator)


State 271

  198 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 198 (assignment_expression_opt)


State 272

   76 direct_declarator: direct_declarator symbol_open_square_bracket type_qualifier_list_opt assignment_expression_opt . symbol_closed_square_bracket

    symbol_closed_square_bracket  shift, and go to state 302


State 273

  103 designator: symbol_open_square_bracket constant_expression symbol_closed_square_bracket .

    $default  reduce using rule 103 (designator)


State 274

   97 initializer: symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket .

    $default  reduce using rule 97 (initializer)


State 275

   95 initializer: . assignment_expression
   96            | . symbol_open_curly_bracket initializer_list symbol_open_curly_bracket
   97            | . symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
   99 initializer_list: initializer_list symbol_comma designation_opt . initializer
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression

    identifier                 shift, and go to state 69
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 72
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_sizeof             shift, and go to state 81

    initializer                go to state 303
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 99


State 276

   98 initializer_list: . designation_opt initializer
   99                 | . initializer_list symbol_comma designation_opt initializer
  100 designation: . designator_list symbol_equal
  101 designator_list: . designator
  102                | . designator_list designator
  103 designator: . symbol_open_square_bracket constant_expression symbol_closed_square_bracket
  104           | . symbol_dot identifier
  116 postfix_expression: symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket . initializer_list symbol_closed_curly_bracket
  117                   | symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket . initializer_list symbol_comma symbol_closed_curly_bracket
  202 designation_opt: . designation
  203                | . %empty  [identifier, constant, string_constant, symbol_open_curly_bracket, symbol_open_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_sizeof]

    symbol_open_square_bracket  shift, and go to state 110
    symbol_dot                  shift, and go to state 111

    $default  reduce using rule 203 (designation_opt)

    initializer_list  go to state 304
    designation       go to state 113
    designator_list   go to state 114
    designator        go to state 115
    designation_opt   go to state 116


State 277

  133 cast_expression: symbol_open_bracket type_name symbol_closed_bracket cast_expression .

    $default  reduce using rule 133 (cast_expression)


State 278

  178 expression: expression symbol_comma assignment_expression .

    $default  reduce using rule 178 (expression)


State 279

  116 postfix_expression: symbol_open_bracket type_name symbol_closed_bracket . symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | symbol_open_bracket type_name symbol_closed_bracket . symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket

    symbol_open_curly_bracket  shift, and go to state 276


State 280

  116 postfix_expression: symbol_open_bracket type_name symbol_closed_bracket . symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | symbol_open_bracket type_name symbol_closed_bracket . symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  125 unary_expression: keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket .  [symbol_colon, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_closed_bracket, symbol_comma, symbol_equal, symbol_closed_square_bracket, symbol_star, symbol_and, symbol_plus, symbol_minus, symbol_divide, symbol_modulo, symbol_leftshift, symbol_rightshift, symbol_less, symbol_greater, symbol_greatereq, symbol_lesseq, symbol_doubleeq, symbol_noteq, symbol_xor, symbol_oneor, symbol_doubleor, symbol_question, symbol_doubleand, symbol_muleq, symbol_diveq, symbol_modeq, symbol_pluseq, symbol_minuseq, symbol_leftshifteq, symbol_rightshifteq, symbol_xoreq, symbol_andeq, symbol_oreq]

    symbol_open_curly_bracket  shift, and go to state 276

    symbol_open_curly_bracket  [reduce using rule 125 (unary_expression)]
    $default                   reduce using rule 125 (unary_expression)


State 281

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  119 argument_expression_list: argument_expression_list symbol_comma . assignment_expression
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 305


State 282

  111 postfix_expression: postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket .

    $default  reduce using rule 111 (postfix_expression)


State 283

  110 postfix_expression: postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket .

    $default  reduce using rule 110 (postfix_expression)


State 284

  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  163                       | logical_OR_expression symbol_question expression symbol_colon . conditional_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 146
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 306


State 285

   14 labeled_statement: identifier symbol_colon statement .

    $default  reduce using rule 14 (labeled_statement)


State 286

   23 selection_statement: keyword_if symbol_open_bracket expression . symbol_closed_bracket statement
   24                    | keyword_if symbol_open_bracket expression . symbol_closed_bracket statement keyword_else statement
  178 expression: expression . symbol_comma assignment_expression

    symbol_closed_bracket  shift, and go to state 307
    symbol_comma           shift, and go to state 219


State 287

   25 selection_statement: keyword_switch symbol_open_bracket expression . symbol_closed_bracket statement
  178 expression: expression . symbol_comma assignment_expression

    symbol_closed_bracket  shift, and go to state 308
    symbol_comma           shift, and go to state 219


State 288

   26 iteration_statement: keyword_while symbol_open_bracket expression . symbol_closed_bracket statement
  178 expression: expression . symbol_comma assignment_expression

    symbol_closed_bracket  shift, and go to state 309
    symbol_comma           shift, and go to state 219


State 289

   27 iteration_statement: keyword_do statement keyword_while . symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon

    symbol_open_bracket  shift, and go to state 310


State 290

   29 iteration_statement: keyword_for symbol_open_bracket declaration . expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 311


State 291

   28 iteration_statement: keyword_for symbol_open_bracket expression_opt . symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement

    symbol_semi_colon  shift, and go to state 312


State 292

   30 jump_statement: keyword_goto identifier symbol_semi_colon .

    $default  reduce using rule 30 (jump_statement)


State 293

   33 jump_statement: keyword_return expression_opt symbol_semi_colon .

    $default  reduce using rule 33 (jump_statement)


State 294

   16 labeled_statement: keyword_default symbol_colon statement .

    $default  reduce using rule 16 (labeled_statement)


State 295

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   15                  | . keyword_case constant_expression symbol_colon statement
   15                  | keyword_case constant_expression symbol_colon . statement
   16                  | . keyword_default symbol_colon statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    $default  reduce using rule 185 (expression_opt)

    statement                  go to state 313
    labeled_statement          go to state 180
    compound_statement         go to state 181
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 191


State 296

   87 parameter_type_list: parameter_list symbol_comma symbol_threedot .

    $default  reduce using rule 87 (parameter_type_list)


State 297

   89 parameter_list: parameter_list symbol_comma parameter_declaration .

    $default  reduce using rule 89 (parameter_list)


State 298

   93 identifier_list: identifier_list symbol_comma identifier .

    $default  reduce using rule 93 (identifier_list)


State 299

   77 direct_declarator: direct_declarator symbol_open_square_bracket keyword_static type_qualifier_list_opt assignment_expression . symbol_closed_square_bracket

    symbol_closed_square_bracket  shift, and go to state 314


State 300

   78 direct_declarator: direct_declarator symbol_open_square_bracket type_qualifier_list keyword_static assignment_expression . symbol_closed_square_bracket

    symbol_closed_square_bracket  shift, and go to state 315


State 301

   79 direct_declarator: direct_declarator symbol_open_square_bracket type_qualifier_list_opt symbol_star symbol_closed_square_bracket .

    $default  reduce using rule 79 (direct_declarator)


State 302

   76 direct_declarator: direct_declarator symbol_open_square_bracket type_qualifier_list_opt assignment_expression_opt symbol_closed_square_bracket .

    $default  reduce using rule 76 (direct_declarator)


State 303

   99 initializer_list: initializer_list symbol_comma designation_opt initializer .

    $default  reduce using rule 99 (initializer_list)


State 304

   99 initializer_list: initializer_list . symbol_comma designation_opt initializer
  116 postfix_expression: symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list . symbol_closed_curly_bracket
  117                   | symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list . symbol_comma symbol_closed_curly_bracket

    symbol_closed_curly_bracket  shift, and go to state 316
    symbol_comma                 shift, and go to state 317


State 305

  119 argument_expression_list: argument_expression_list symbol_comma assignment_expression .

    $default  reduce using rule 119 (argument_expression_list)


State 306

  163 conditional_expression: logical_OR_expression symbol_question expression symbol_colon conditional_expression .

    $default  reduce using rule 163 (conditional_expression)


State 307

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   15                  | . keyword_case constant_expression symbol_colon statement
   16                  | . keyword_default symbol_colon statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   23                    | keyword_if symbol_open_bracket expression symbol_closed_bracket . statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   24                    | keyword_if symbol_open_bracket expression symbol_closed_bracket . statement keyword_else statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    $default  reduce using rule 185 (expression_opt)

    statement                  go to state 318
    labeled_statement          go to state 180
    compound_statement         go to state 181
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 191


State 308

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   15                  | . keyword_case constant_expression symbol_colon statement
   16                  | . keyword_default symbol_colon statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   25                    | keyword_switch symbol_open_bracket expression symbol_closed_bracket . statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    $default  reduce using rule 185 (expression_opt)

    statement                  go to state 319
    labeled_statement          go to state 180
    compound_statement         go to state 181
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 191


State 309

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   15                  | . keyword_case constant_expression symbol_colon statement
   16                  | . keyword_default symbol_colon statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   26                    | keyword_while symbol_open_bracket expression symbol_closed_bracket . statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    $default  reduce using rule 185 (expression_opt)

    statement                  go to state 320
    labeled_statement          go to state 180
    compound_statement         go to state 181
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 191


State 310

   27 iteration_statement: keyword_do statement keyword_while symbol_open_bracket . expression symbol_closed_bracket symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 321


State 311

   29 iteration_statement: keyword_for symbol_open_bracket declaration expression_opt . symbol_semi_colon expression_opt symbol_closed_bracket statement

    symbol_semi_colon  shift, and go to state 322


State 312

   28 iteration_statement: keyword_for symbol_open_bracket expression_opt symbol_semi_colon . expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 323


State 313

   15 labeled_statement: keyword_case constant_expression symbol_colon statement .

    $default  reduce using rule 15 (labeled_statement)


State 314

   77 direct_declarator: direct_declarator symbol_open_square_bracket keyword_static type_qualifier_list_opt assignment_expression symbol_closed_square_bracket .

    $default  reduce using rule 77 (direct_declarator)


State 315

   78 direct_declarator: direct_declarator symbol_open_square_bracket type_qualifier_list keyword_static assignment_expression symbol_closed_square_bracket .

    $default  reduce using rule 78 (direct_declarator)


State 316

  116 postfix_expression: symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket .

    $default  reduce using rule 116 (postfix_expression)


State 317

   99 initializer_list: initializer_list symbol_comma . designation_opt initializer
  100 designation: . designator_list symbol_equal
  101 designator_list: . designator
  102                | . designator_list designator
  103 designator: . symbol_open_square_bracket constant_expression symbol_closed_square_bracket
  104           | . symbol_dot identifier
  117 postfix_expression: symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma . symbol_closed_curly_bracket
  202 designation_opt: . designation
  203                | . %empty  [identifier, constant, string_constant, symbol_open_curly_bracket, symbol_open_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_sizeof]

    symbol_closed_curly_bracket  shift, and go to state 324
    symbol_open_square_bracket   shift, and go to state 110
    symbol_dot                   shift, and go to state 111

    $default  reduce using rule 203 (designation_opt)

    designation      go to state 113
    designator_list  go to state 114
    designator       go to state 115
    designation_opt  go to state 275


State 318

   23 selection_statement: keyword_if symbol_open_bracket expression symbol_closed_bracket statement .  [identifier, constant, string_constant, symbol_closed_curly_bracket, symbol_open_curly_bracket, symbol_semi_colon, symbol_open_bracket, symbol_star, symbol_double_plus, symbol_double_minus, symbol_and, symbol_plus, symbol_minus, symbol_tilda, keyword_if, keyword_else, keyword_switch, keyword_while, keyword_do, keyword_for, keyword_goto, keyword_continue, keyword_break, keyword_return, keyword_extern, keyword_static, keyword_auto, keyword_register, keyword_void, keyword_char, keyword_short, keyword_int, keyword_long, keyword_float, keyword_double, keyword_signed, keyword_unsigned, keyword__Bool, keyword__Complex, keyword__Imaginary, keyword_enum, keyword_const, keyword_restrict, keyword_volatile, keyword_inline, keyword_sizeof, keyword_default, keyword_case]
   24                    | keyword_if symbol_open_bracket expression symbol_closed_bracket statement . keyword_else statement

    keyword_else  shift, and go to state 325

    keyword_else  [reduce using rule 23 (selection_statement)]
    $default      reduce using rule 23 (selection_statement)


State 319

   25 selection_statement: keyword_switch symbol_open_bracket expression symbol_closed_bracket statement .

    $default  reduce using rule 25 (selection_statement)


State 320

   26 iteration_statement: keyword_while symbol_open_bracket expression symbol_closed_bracket statement .

    $default  reduce using rule 26 (iteration_statement)


State 321

   27 iteration_statement: keyword_do statement keyword_while symbol_open_bracket expression . symbol_closed_bracket symbol_semi_colon
  178 expression: expression . symbol_comma assignment_expression

    symbol_closed_bracket  shift, and go to state 326
    symbol_comma           shift, and go to state 219


State 322

   29 iteration_statement: keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon . expression_opt symbol_closed_bracket statement
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_closed_bracket]

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 327


State 323

   28 iteration_statement: keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt . symbol_semi_colon expression_opt symbol_closed_bracket statement

    symbol_semi_colon  shift, and go to state 328


State 324

  117 postfix_expression: symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket .

    $default  reduce using rule 117 (postfix_expression)


State 325

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   15                  | . keyword_case constant_expression symbol_colon statement
   16                  | . keyword_default symbol_colon statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   24                    | keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else . statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    $default  reduce using rule 185 (expression_opt)

    statement                  go to state 329
    labeled_statement          go to state 180
    compound_statement         go to state 181
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 191


State 326

   27 iteration_statement: keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket . symbol_semi_colon

    symbol_semi_colon  shift, and go to state 330


State 327

   29 iteration_statement: keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt . symbol_closed_bracket statement

    symbol_closed_bracket  shift, and go to state 331


State 328

   28 iteration_statement: keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon . expression_opt symbol_closed_bracket statement
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_closed_bracket]

    identifier           shift, and go to state 69
    constant             shift, and go to state 70
    string_constant      shift, and go to state 71
    symbol_open_bracket  shift, and go to state 73
    symbol_star          shift, and go to state 74
    symbol_double_plus   shift, and go to state 75
    symbol_double_minus  shift, and go to state 76
    symbol_and           shift, and go to state 77
    symbol_plus          shift, and go to state 78
    symbol_minus         shift, and go to state 79
    symbol_tilda         shift, and go to state 80
    keyword_sizeof       shift, and go to state 81

    $default  reduce using rule 185 (expression_opt)

    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 332


State 329

   24 selection_statement: keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement .

    $default  reduce using rule 24 (selection_statement)


State 330

   27 iteration_statement: keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon .

    $default  reduce using rule 27 (iteration_statement)


State 331

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   15                  | . keyword_case constant_expression symbol_colon statement
   16                  | . keyword_default symbol_colon statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   29                    | keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket . statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    $default  reduce using rule 185 (expression_opt)

    statement                  go to state 333
    labeled_statement          go to state 180
    compound_statement         go to state 181
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 191


State 332

   28 iteration_statement: keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt . symbol_closed_bracket statement

    symbol_closed_bracket  shift, and go to state 334


State 333

   29 iteration_statement: keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement .

    $default  reduce using rule 29 (iteration_statement)


State 334

    8 statement: . labeled_statement
    9          | . compound_statement
   10          | . expression_statement
   11          | . selection_statement
   12          | . iteration_statement
   13          | . jump_statement
   14 labeled_statement: . identifier symbol_colon statement
   15                  | . keyword_case constant_expression symbol_colon statement
   16                  | . keyword_default symbol_colon statement
   17 compound_statement: . symbol_open_curly_bracket block_item_list_opt symbol_closed_curly_bracket
   22 expression_statement: . expression_opt symbol_semi_colon
   23 selection_statement: . keyword_if symbol_open_bracket expression symbol_closed_bracket statement
   24                    | . keyword_if symbol_open_bracket expression symbol_closed_bracket statement keyword_else statement
   25                    | . keyword_switch symbol_open_bracket expression symbol_closed_bracket statement
   26 iteration_statement: . keyword_while symbol_open_bracket expression symbol_closed_bracket statement
   27                    | . keyword_do statement keyword_while symbol_open_bracket expression symbol_closed_bracket symbol_semi_colon
   28                    | . keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   28                    | keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket . statement
   29                    | . keyword_for symbol_open_bracket declaration expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement
   30 jump_statement: . keyword_goto identifier symbol_semi_colon
   31               | . keyword_continue symbol_semi_colon
   32               | . keyword_break symbol_semi_colon
   33               | . keyword_return expression_opt symbol_semi_colon
  105 primary_expression: . identifier
  106                   | . constant
  107                   | . string_constant
  108                   | . symbol_open_bracket expression symbol_closed_bracket
  109 postfix_expression: . primary_expression
  110                   | . postfix_expression symbol_open_square_bracket expression symbol_closed_square_bracket
  111                   | . postfix_expression symbol_open_bracket argument_expression_list_opt symbol_closed_bracket
  112                   | . postfix_expression symbol_dot identifier
  113                   | . postfix_expression symbol_dash_greater identifier
  114                   | . postfix_expression symbol_double_plus
  115                   | . postfix_expression symbol_double_minus
  116                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_closed_curly_bracket
  117                   | . symbol_open_bracket type_name symbol_closed_bracket symbol_open_curly_bracket initializer_list symbol_comma symbol_closed_curly_bracket
  120 unary_expression: . postfix_expression
  121                 | . symbol_double_plus unary_expression
  122                 | . symbol_double_minus unary_expression
  123                 | . unary_operator cast_expression
  124                 | . keyword_sizeof unary_expression
  125                 | . keyword_sizeof symbol_open_bracket type_name symbol_closed_bracket
  126 unary_operator: . symbol_and
  127               | . symbol_star
  128               | . symbol_plus
  129               | . symbol_minus
  130               | . symbol_tilda
  131               | . symbol_tilda
  132 cast_expression: . unary_expression
  133                | . symbol_open_bracket type_name symbol_closed_bracket cast_expression
  134 multiplicative_expression: . cast_expression
  135                          | . multiplicative_expression symbol_star cast_expression
  136                          | . multiplicative_expression symbol_divide cast_expression
  137                          | . multiplicative_expression symbol_modulo cast_expression
  138 additive_expression: . multiplicative_expression
  139                    | . additive_expression symbol_plus multiplicative_expression
  140                    | . additive_expression symbol_minus multiplicative_expression
  141 shift_expression: . additive_expression
  142                 | . shift_expression symbol_leftshift additive_expression
  143                 | . shift_expression symbol_rightshift additive_expression
  144 relational_expression: . shift_expression
  145                      | . relational_expression symbol_less shift_expression
  146                      | . relational_expression symbol_greater shift_expression
  147                      | . relational_expression symbol_lesseq shift_expression
  148                      | . relational_expression symbol_greatereq shift_expression
  149 equality_expression: . relational_expression
  150                    | . equality_expression symbol_doubleeq relational_expression
  151                    | . equality_expression symbol_noteq relational_expression
  152 AND_expression: . equality_expression
  153               | . AND_expression symbol_and equality_expression
  154 exclusive_OR_expression: . AND_expression
  155                        | . exclusive_OR_expression symbol_xor AND_expression
  156 inclusive_OR_expression: . exclusive_OR_expression
  157                        | . inclusive_OR_expression symbol_oneor exclusive_OR_expression
  158 logical_AND_expression: . inclusive_OR_expression
  159                       | . logical_AND_expression symbol_doubleand inclusive_OR_expression
  160 logical_OR_expression: . logical_AND_expression
  161                      | . logical_OR_expression symbol_doubleor logical_AND_expression
  162 conditional_expression: . logical_OR_expression
  163                       | . logical_OR_expression symbol_question expression symbol_colon conditional_expression
  164 assignment_expression: . conditional_expression
  165                      | . unary_expression assignment_operator assignment_expression
  177 expression: . assignment_expression
  178           | . expression symbol_comma assignment_expression
  184 expression_opt: . expression
  185               | . %empty  [symbol_semi_colon]

    identifier                 shift, and go to state 167
    constant                   shift, and go to state 70
    string_constant            shift, and go to state 71
    symbol_open_curly_bracket  shift, and go to state 101
    symbol_open_bracket        shift, and go to state 73
    symbol_star                shift, and go to state 74
    symbol_double_plus         shift, and go to state 75
    symbol_double_minus        shift, and go to state 76
    symbol_and                 shift, and go to state 77
    symbol_plus                shift, and go to state 78
    symbol_minus               shift, and go to state 79
    symbol_tilda               shift, and go to state 80
    keyword_if                 shift, and go to state 168
    keyword_switch             shift, and go to state 169
    keyword_while              shift, and go to state 170
    keyword_do                 shift, and go to state 171
    keyword_for                shift, and go to state 172
    keyword_goto               shift, and go to state 173
    keyword_continue           shift, and go to state 174
    keyword_break              shift, and go to state 175
    keyword_return             shift, and go to state 176
    keyword_sizeof             shift, and go to state 81
    keyword_default            shift, and go to state 177
    keyword_case               shift, and go to state 178

    $default  reduce using rule 185 (expression_opt)

    statement                  go to state 335
    labeled_statement          go to state 180
    compound_statement         go to state 181
    expression_statement       go to state 184
    selection_statement        go to state 185
    iteration_statement        go to state 186
    jump_statement             go to state 187
    primary_expression         go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    unary_operator             go to state 86
    cast_expression            go to state 87
    multiplicative_expression  go to state 88
    additive_expression        go to state 89
    shift_expression           go to state 90
    relational_expression      go to state 91
    equality_expression        go to state 92
    AND_expression             go to state 93
    exclusive_OR_expression    go to state 94
    inclusive_OR_expression    go to state 95
    logical_AND_expression     go to state 96
    logical_OR_expression      go to state 97
    conditional_expression     go to state 98
    assignment_expression      go to state 121
    expression                 go to state 189
    expression_opt             go to state 191


State 335

   28 iteration_statement: keyword_for symbol_open_bracket expression_opt symbol_semi_colon expression_opt symbol_semi_colon expression_opt symbol_closed_bracket statement .

    $default  reduce using rule 28 (iteration_statement)
